---
openapi: 3.0.2
info:
  title: Bugcrowd REST API
  description: |
    This is Bugcrowd's primary REST API and follows the [JSON API specification](https://jsonapi.org/format/).

    For more information on how to get started check out the [usage documentation](https://docs.bugcrowd.com/api/usage/)
  version: '2024-01-11'
  contact:
    name: Bugcrowd REST API
    url: https://bugcrowd.com
    email: support@bugcrowd.com
servers:
- url: https://api.bugcrowd.com
  description: Main production server
tags:
- name: Submissions API
  description: API used for submission workflows and data synchronization.
- name: access_grant_resource
  x-displayName: AccessGrant
  description: |
    The`access_grant` resource defines a user's role based access to another resource.
    These can be revoked after invite acceptance.

    #### AccessGrant resource schema

    < SchemaDefinition schemaRef = "#/components/schemas/AccessGrant" />
- name: access_invitation_resource
  x-displayName: AccessInvitation
  description: |
    The `access_invitation` resource is an invite to a specific email that includes information to
    create the necessary `access_grant` resources once the invite is accepted. You can list, create,
    and delete (rescind) `access_invitation` resources.

    _Rescinding an `access_invitation` is only available before it has been accepted. To revoke
    access after the invitation has been accepted, you must delete the `access_grant`

    ```shell
    api.bugcrowd.com/access_invitations?fields[access_invitation]=resource_roles&fields[resource_role]=role&include=resource_roles
    ```

    #### AccessInvitation resource schema

    < SchemaDefinition schemaRef = "#/components/schemas/AccessInvitation" />
- name: access_invitation_resource_role_resource
  x-displayName: ResourceRole
  description: |
    The `resource_role` represents a role on a program or organization defined within an
    `access_invitation` resource.

    #### ResourceRole resource schema

    < SchemaDefinition schemaRef = "#/components/schemas/ResourceRole" />
- name: activity_resource
  x-displayName: Activity
  description: |
    The `activity` resource describes a historic action on a resource. Currently they can be included on a `submission`.

    ```shell
    api.bugcrowd.com/submissions?fields[submission]=activities&include=activities&fields[activity]=key
    ```

    #### Activity resource schema

    <SchemaDefinition schemaRef="#/components/schemas/Activity"/>
- name: blocker_webhooks
  x-displayName: Blocker webhooks
  description: Webhooks for the `blocker` resource
- name: claim_ticket_resource
  x-displayName: ClaimTicket
  description: |
    A `claim_ticket` represents an ability for someone to claim a submission as theirs, often when submitted through channels
    such as the external form, email, or submissions created via the API.

    #### ClaimTicket resource schema

    <SchemaDefinition schemaRef="#/components/schemas/ClaimTicket"/>
- name: comment_resource
  x-displayName: Comment
  description: |
    Comments are messages left after the submission was created, which can be included on the `/submissions` endpoint.

    ```shell
    api.bugcrowd.com/submissions?fields[submission]=comments&include=comments&fields[comment]=body,author
    ```

    #### Comment resource schema

    <SchemaDefinition schemaRef="#/components/schemas/Comment"/>
- name: customer_asset_resource
  x-displayName: CustomerAssets
  description: |
    A `customer_asset` represents a resource which can be tested for security vulnerabilities or otherwise worked on by our crowd.
    It could be a piece of software such as authorized softwares, unauthorized softwares, software libraries,
    like .dll and .ocx etc, or hardwares such as Internet of Things (IoT) devices like printers, servers,
    routers etc, or a domain, or a cloud asset like containers, code repositories, storage buckets etc,
    all within an information technology environment.

    ```shell
    api.bugcrowd.com/customer_assets?filter[created_by]=example@gmail.com&fields[created_by]=name,email
    ```

    #### CustomerAsset resource schema

    <Schema Definition schemaRef="#/components/schemas/CustomerAsset"/>
- name: cvss_vector_resource
  x-displayName: CvssVector
  description: |
    If the CVSS calculator is enabled on a program, submissions in that program will have a `cvss_vector`
    relationship that can be included from the `/submissions` endpoint.

    ```shell
    api.bugcrowd.com/submissions?fields[submission]=cvss_vector&include=cvss_vector&fields[cvss_vector]=score
    ```
    #### CvssVector resource schema

    <SchemaDefinition schemaRef="#/components/schemas/CvssVector"/>
- name: event_resource
  x-displayName: Event
  description: |
    The `event` resource describes a historic action on a resource. Currently they are a relationship
    on an `activity` and also the main resource that drives [Webhooks](./#tag/submission_webhooks).

    ```shell
    api.bugcrowd.com/submissions?fields[submission]=activities&include=activities&fields[activity]=event
    ```

    #### event resource schema

    <SchemaDefinition schemaRef="#/components/schemas/Event"/>
- name: external_issue_resource
  x-displayName: External Issue
  description: |
    External Issues can be managed using the `/external_isues` endpoint

    ```shell
    api.bugcrowd.com/external_issues?include=submissions
    ```

    #### ExternalIssue resource schema

    <Schema Definition schemaRef="#/components/schemas/ExternalIssue"
- name: file_attachment_resource
  x-displayName: FileAttachment
  description: |
    File attachments can be included on the `/submissions` endpoint

    ```shell
    api.bugcrowd.com/submissions?fields[submission]=file_attachments&include=file_attachments&fields[file_attachment]=s3_signed_url
    ```

    #### FileAttachment resource schema

    <SchemaDefinition schemaRef="#/components/schemas/FileAttachment"/>
- name: identity_resource
  x-displayName: Identity
  description: |
    The `identity` resource can be the `researcher` on a `submission` or a `payment`, and can also
    be the `author` of a `comment` or the `assignee` on a `submission`.

    When the identity is a researcher the `email` property will not be available and display of
    the user `name` is controlled by the researcher's privacy settings.

    When the identity is a Customer team member or Bugcrowd staff member the `email` property will
    be available and the display of the user `name` is controlled by filling in the `display name`
    in their Crowdcontrol settings.

    ```shell
    api.bugcrowd.com/submissions?fields[submission]=researcher&include=researcher&fields[researcher]=name
    ```

    #### Identity resource schema

    <SchemaDefinition schemaRef="#/components/schemas/Identity"/>
- name: monetary_reward_resource
  x-displayName: MonetaryReward
  description: |-
    #### MonetaryReward resource schema
    <SchemaDefinition schemaRef="#/components/schemas/MonetaryReward"/>
- name: organization_resource
  x-displayName: Organization
  description: |-
    #### Organization resource schema
    <SchemaDefinition schemaRef="#/components/schemas/Organization"/>
- name: payment_resource
  x-displayName: Payment
  description: |
    A `payment` is what is paid to researchers and has a relationship on the `monetary_reward`. For split
    payments, a single `monetary_reward` can be paid to multiple researchers each with a single `payment`.

    ```shell
    api.bugcrowd.com/monetary_rewards/MONETARY_REWARD_UUID?fields[monetary_reward]=payments&include=payments&fields[payment]=amount_cents
    ```

    #### Payment resource schema

    <SchemaDefinition schemaRef="#/components/schemas/Payment"/>
- name: program_brief_resource
  x-displayName: ProgramBrief
  description: |
    A `program_brief` contains the brief information including scope and rewards. This can be best seen by
    including relationships on the `/programs` [endpoints](#tag/program_resource).

    ```shell
    api.bugcrowd.com/programs?include=current_brief.target_groups.targets,current_brief.target_groups.reward_range&fields[program]=current_brief&fields[program_brief]=target_groups&fields[target_group]=targets,reward_range&fields[target]=name
    ```
    _Some endpoints provide nested relationships like this using a dot (`.`) in between._

    #### ProgramBrief resource schema

    <SchemaDefinition schemaRef="#/components/schemas/ProgramBrief"/>
- name: program_resource
  x-displayName: Program
  description: |-
    #### Program resource schema
    <SchemaDefinition schemaRef="#/components/schemas/Program"/>
- name: reward_range_resource
  x-displayName: RewardRange
  description: |
    A `reward_range` can be included through a `target_group`. The `reward_range` is currently accessed at
    the `/programs` endpoint as shown with [the `program_brief`](#tag/program_brief_resource)

    #### RewardRange resource schema

    <SchemaDefinition schemaRef="#/components/schemas/RewardRange"/>
- name: submission_resource
  x-displayName: Submission
  description: |-
    #### Submission resource schema
    <SchemaDefinition schemaRef="#/components/schemas/Submission"/>
- name: submission_webhooks
  x-displayName: Submission webhooks
  description: Webhooks for the `submission` resource
- name: target_group_resource
  x-displayName: TargetGroup
  description: |
    A `target_group` can be included through a `program_brief` as shown [here](#tag/program_brief_resource)

    #### TargetGroup resource schema

    <SchemaDefinition schemaRef="#/components/schemas/TargetGroup"/>
- name: target_resource
  x-displayName: Target
  description: |-
    #### Target resource schema
    <SchemaDefinition schemaRef="#/components/schemas/Target"/>
x-tagGroups:
- name: API Resources
  tags:
  - submission_resource
  - program_resource
  - activity_resource
  - claim_ticket_resource
  - comment_resource
  - cvss_vector_resource
  - event_resource
  - file_attachment_resource
  - identity_resource
  - monetary_reward_resource
  - organization_resource
  - payment_resource
  - program_brief_resource
  - reward_range_resource
  - target_resource
  - target_group_resource
- name: Webhooks
  tags:
  - blocker_webhooks
  - submission_webhooks
paths:
  "/organizations/{id}":
    get:
      summary: Fetch organization
      operationId: getOrganization
      tags:
      - Submissions API
      - organization_resource
      description: Returns a single organization by UUID.
      parameters:
      - "$ref": "#/components/parameters/BugcrowdVersionParameter"
      - "$ref": "#/components/parameters/IDParameter"
      - "$ref": "#/components/parameters/OrganizationFieldsParameter"
      - "$ref": "#/components/parameters/ProgramFieldsParameter"
      - "$ref": "#/components/parameters/TargetFieldsParameter"
      - "$ref": "#/components/parameters/OrganizationIncludeParameter"
      responses:
        '200':
          description: A JSON object with a `data` property containing an organization
            object.
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": "#/components/schemas/GetOrganizationResponse"
              examples:
                ValidExample:
                  value:
                    data:
                      id:
                        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                      type: organization
                      attributes:
                        name: name
                      relationships:
                        programs:
                          data:
                          - id:
                              "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                            type: program
                          links:
                            related:
                              href: "/programs?filter[organization_id]=10000000-0000-0000-0000-000000000000"
                              meta:
                                count: 1
                                total_hits: 1
                      links:
                        self: "/organizations/10000000-0000-0000-0000-000000000000"
                    included: []
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
        '400':
          description: An error object indicating unsupported request parameters.
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
              examples:
                InvalidParamValue:
                  value:
                    errors:
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/OrganizationFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/ProgramFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/TargetFieldsEnumBadRequest
                    - title: Bad Request
                      status: '400'
                      detail: 'The property ''#/include/0'' value ''invalid_resource''
                        did not match one of the following values: programs, targets.'
                      source:
                        pointer: "/include/0"
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
        '404':
          description: An error indicating missing resource.
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
              examples:
                InvalidUrlId:
                  value:
                    errors:
                      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/NotFoundError
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
      x-codeSamples:
      - label: Shell + Curl
        lang: shell_curl
        source: |-
          curl --request GET \
            --url 'https://api.bugcrowd.com/organizations/%7Bid%7D?fields%5Borganization%5D=SOME_ARRAY_VALUE&fields%5Bprogram%5D=SOME_ARRAY_VALUE&fields%5Btarget%5D=SOME_ARRAY_VALUE&include=SOME_ARRAY_VALUE' \
            --header 'Authorization: REPLACE_KEY_VALUE' \
            --header 'Bugcrowd-Version: 2024-01-11'
      - label: Node + Native
        lang: node_native
        source: |-
          const http = require("https");

          const options = {
            "method": "GET",
            "hostname": "api.bugcrowd.com",
            "port": null,
            "path": "/organizations/%7Bid%7D?fields%5Borganization%5D=SOME_ARRAY_VALUE&fields%5Bprogram%5D=SOME_ARRAY_VALUE&fields%5Btarget%5D=SOME_ARRAY_VALUE&include=SOME_ARRAY_VALUE",
            "headers": {
              "Bugcrowd-Version": "2024-01-11",
              "Authorization": "REPLACE_KEY_VALUE"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.end();
      - label: Ruby + Native
        lang: ruby_native
        source: |-
          require 'uri'
          require 'net/http'
          require 'openssl'

          url = URI("https://api.bugcrowd.com/organizations/%7Bid%7D?fields%5Borganization%5D=SOME_ARRAY_VALUE&fields%5Bprogram%5D=SOME_ARRAY_VALUE&fields%5Btarget%5D=SOME_ARRAY_VALUE&include=SOME_ARRAY_VALUE")

          http = Net::HTTP.new(url.host, url.port)
          http.use_ssl = true
          http.verify_mode = OpenSSL::SSL::VERIFY_NONE

          request = Net::HTTP::Get.new(url)
          request["Bugcrowd-Version"] = '2024-01-11'
          request["Authorization"] = 'REPLACE_KEY_VALUE'

          response = http.request(request)
          puts response.read_body
      - label: Python + Python3
        lang: python_python3
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.bugcrowd.com")

          headers = {
              'Bugcrowd-Version': "2024-01-11",
              'Authorization': "REPLACE_KEY_VALUE"
              }

          conn.request("GET", "/organizations/%7Bid%7D?fields%5Borganization%5D=SOME_ARRAY_VALUE&fields%5Bprogram%5D=SOME_ARRAY_VALUE&fields%5Btarget%5D=SOME_ARRAY_VALUE&include=SOME_ARRAY_VALUE", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
  "/organizations":
    get:
      summary: Index organizations
      operationId: listOrganizations
      tags:
      - Submissions API
      - organization_resource
      description: Returns a list of organizations belonging to the user.
      parameters:
      - "$ref": "#/components/parameters/BugcrowdVersionParameter"
      - "$ref": "#/components/parameters/OrganizationFieldsParameter"
      - "$ref": "#/components/parameters/ProgramFieldsParameter"
      - "$ref": "#/components/parameters/TargetFieldsParameter"
      - "$ref": "#/components/parameters/PageLimitParameter"
      - "$ref": "#/components/parameters/PageOffsetParameter"
      - "$ref": "#/components/parameters/GetOrganizationIncludeParameter"
      - name: sort
        description: Sorting options
        in: query
        required: false
        explode: false
        schema:
          type: array
          maxItems: 2
          uniqueItems: true
          items:
            type: string
            enum:
            - name-asc
            - name-desc
            example: name-desc
        examples:
          ValidExample:
            value: name-desc
          InvalidParamValue:
            value: invalid_sort
      responses:
        '200':
          description: A JSON object with a `data` property containing an array of
            organization objects.
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": "#/components/schemas/ListOrganizationsResponse"
              examples:
                ValidExample:
                  value:
                    data:
                    - id:
                        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                      type: organization
                      attributes:
                        name: name
                      relationships:
                        programs:
                          data:
                          - id:
                              "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                            type: program
                          links:
                            related:
                              href: "/programs?filter[organization_id]=10000000-0000-0000-0000-000000000000"
                              meta:
                                count: 1
                                total_hits: 1
                      links:
                        self: "/organizations/10000000-0000-0000-0000-000000000000"
                    included:
                    - id:
                        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                      type: program
                      attributes:
                        code: code
                      relationships:
                        organization:
                          data:
                            id:
                              "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                            type: organization
                          links:
                            related:
                              href: "/organizations/10000000-0000-0000-0000-000000000000"
                      links:
                        self: "/programs/10000000-0000-0000-0000-000000000000"
                    meta:
                      total_hits: 1
                      count: 1
                    links:
                      self: "/organizations?fields[organization]=name,programs&fields[program]=code,organization&fields[target]=name,category&include=programs&page[limit]=50&page[offset]=0&sort=name-desc"
                      next: "/organizations?fields[organization]=name,programs&fields[program]=code,organization&fields[target]=name,category&include=programs&page[limit]=50&page[offset]=50&sort=name-desc"
                      previous: "/organizations?fields[organization]=name,programs&fields[program]=code,organization&fields[target]=name,category&include=programs&page[limit]=50&page[offset]=0&sort=name-desc"
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
        '400':
          description: An error object indicating unsupported request parameters.
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
              examples:
                BeyondMaximumOffset:
                  value:
                    errors:
                    - title: Bad Request
                      status: '400'
                      detail: The property '#/page/offset' did not have a maximum
                        value of 9900, inclusively.
                      source:
                        pointer: "/page/offset"
                InvalidParamValue:
                  value:
                    errors:
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/OrganizationFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/ProgramFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/TargetFieldsEnumBadRequest
                    - title: Bad Request
                      status: '400'
                      detail: The property '#/page/limit' did not have a maximum value
                        of 100, inclusively.
                      source:
                        pointer: "/page/limit"
                    - title: Bad Request
                      status: '400'
                      detail: The property '#/page/offset' did not have a minimum
                        value of 0, inclusively.
                      source:
                        pointer: "/page/offset"
                    - title: Bad Request
                      status: '400'
                      detail: 'The property ''#/include/0'' value ''invalid_resource''
                        did not match one of the following values: programs, targets.'
                      source:
                        pointer: "/include/0"
                    - title: Bad Request
                      status: '400'
                      detail: 'The property ''#/sort/0'' value ''invalid_sort'' did
                        not match one of the following values: name-asc, name-desc.'
                      source:
                        pointer: "/sort/0"
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
        '404':
          description: An error indicating missing resource.
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
              example:
                errors:
                  "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/NotFoundError
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
      x-codeSamples:
      - label: Shell + Curl
        lang: shell_curl
        source: |-
          curl --request GET \
            --url 'https://api.bugcrowd.com/organizations?fields%5Borganization%5D=SOME_ARRAY_VALUE&fields%5Bprogram%5D=SOME_ARRAY_VALUE&fields%5Btarget%5D=SOME_ARRAY_VALUE&page%5Blimit%5D=SOME_INTEGER_VALUE&page%5Boffset%5D=SOME_INTEGER_VALUE&include=SOME_ARRAY_VALUE&sort=SOME_ARRAY_VALUE' \
            --header 'Authorization: REPLACE_KEY_VALUE' \
            --header 'Bugcrowd-Version: 2024-01-11'
      - label: Node + Native
        lang: node_native
        source: |-
          const http = require("https");

          const options = {
            "method": "GET",
            "hostname": "api.bugcrowd.com",
            "port": null,
            "path": "/organizations?fields%5Borganization%5D=SOME_ARRAY_VALUE&fields%5Bprogram%5D=SOME_ARRAY_VALUE&fields%5Btarget%5D=SOME_ARRAY_VALUE&page%5Blimit%5D=SOME_INTEGER_VALUE&page%5Boffset%5D=SOME_INTEGER_VALUE&include=SOME_ARRAY_VALUE&sort=SOME_ARRAY_VALUE",
            "headers": {
              "Bugcrowd-Version": "2024-01-11",
              "Authorization": "REPLACE_KEY_VALUE"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.end();
      - label: Ruby + Native
        lang: ruby_native
        source: |-
          require 'uri'
          require 'net/http'
          require 'openssl'

          url = URI("https://api.bugcrowd.com/organizations?fields%5Borganization%5D=SOME_ARRAY_VALUE&fields%5Bprogram%5D=SOME_ARRAY_VALUE&fields%5Btarget%5D=SOME_ARRAY_VALUE&page%5Blimit%5D=SOME_INTEGER_VALUE&page%5Boffset%5D=SOME_INTEGER_VALUE&include=SOME_ARRAY_VALUE&sort=SOME_ARRAY_VALUE")

          http = Net::HTTP.new(url.host, url.port)
          http.use_ssl = true
          http.verify_mode = OpenSSL::SSL::VERIFY_NONE

          request = Net::HTTP::Get.new(url)
          request["Bugcrowd-Version"] = '2024-01-11'
          request["Authorization"] = 'REPLACE_KEY_VALUE'

          response = http.request(request)
          puts response.read_body
      - label: Python + Python3
        lang: python_python3
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.bugcrowd.com")

          headers = {
              'Bugcrowd-Version': "2024-01-11",
              'Authorization': "REPLACE_KEY_VALUE"
              }

          conn.request("GET", "/organizations?fields%5Borganization%5D=SOME_ARRAY_VALUE&fields%5Bprogram%5D=SOME_ARRAY_VALUE&fields%5Btarget%5D=SOME_ARRAY_VALUE&page%5Blimit%5D=SOME_INTEGER_VALUE&page%5Boffset%5D=SOME_INTEGER_VALUE&include=SOME_ARRAY_VALUE&sort=SOME_ARRAY_VALUE", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
  "/programs":
    get:
      summary: Index programs
      operationId: listPrograms
      tags:
      - Submissions API
      - program_resource
      description: Returns a list of programs belonging to the user.
      parameters:
      - "$ref": "#/components/parameters/BugcrowdVersionParameter"
      - "$ref": "#/components/parameters/OrganizationFieldsParameter"
      - "$ref": "#/components/parameters/ProgramFieldsParameter"
      - "$ref": "#/components/parameters/ProgramBriefFieldsParameter"
      - "$ref": "#/components/parameters/RewardRangeFieldsParameter"
      - "$ref": "#/components/parameters/SubmissionFieldsParameter"
      - "$ref": "#/components/parameters/TargetFieldsParameter"
      - "$ref": "#/components/parameters/TargetGroupFieldsParameter"
      - "$ref": "#/components/parameters/PageLimitParameter"
      - "$ref": "#/components/parameters/PageOffsetParameter"
      - "$ref": "#/components/parameters/ProgramIncludeParameter"
      - "$ref": "#/components/parameters/OrganizationIDFilterParameter"
      - name: sort
        description: Tokenized search sort options
        in: query
        required: false
        explode: false
        schema:
          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/ProgramSortSchema
        examples:
          ValidExample:
            value: promoted-desc,starts-desc
          InvalidParamValue:
            value: invalid_sort
      responses:
        '200':
          description: A JSON object with a `data` property containing an array of
            program objects.
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": "#/components/schemas/ListProgramsResponse"
              examples:
                ValidExample:
                  value:
                    data:
                    - id:
                        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                      type: program
                      attributes:
                        code: code
                      relationships:
                        organization:
                          data:
                            id:
                              "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                            type: organization
                          links:
                            related:
                              href: "/organizations/10000000-0000-0000-0000-000000000000"
                      links:
                        self: "/programs/10000000-0000-0000-0000-000000000000"
                    included:
                    - id:
                        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                      type: program_brief
                      attributes:
                        demo: false
                      relationships:
                        program:
                          data:
                            id:
                              "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                            type: program
                          links:
                            related:
                              href: "/programs/10000000-0000-0000-0000-000000000000"
                      links:
                        self: "/program_briefs/10000000-0000-0000-0000-000000000000"
                    meta:
                      count: 1
                      total_hits: 1
                    links:
                      self: "/programs?fields[organization]=name,programs&fields[program]=code,organization&fields[program_brief]=demo,program&fields[reward_range]=p1_max_cents,p1_min_cents&fields[submission]=state,duplicate&fields[target]=name,category&fields[target_group]=name,in_scope&filter[organization_id]=10000000-0000-0000-0000-000000000000&include=current_brief&page[limit]=50&page[offset]=0&sort=promoted-desc,starts-desc"
                      next: "/programs?fields[organization]=name,programs&fields[program]=code,organization&fields[program_brief]=demo,program&fields[reward_range]=p1_max_cents,p1_min_cents&fields[submission]=state,duplicate&fields[target]=name,category&fields[target_group]=name,in_scope&filter[organization_id]=10000000-0000-0000-0000-000000000000&include=current_brief&page[limit]=50&page[offset]=50&sort=promoted-desc,starts-desc"
                      previous: "/programs?fields[organization]=name,programs&fields[program]=code,organization&fields[program_brief]=demo,program&fields[reward_range]=p1_max_cents,p1_min_cents&fields[submission]=state,duplicate&fields[target]=name,category&fields[target_group]=name,in_scope&filter[organization_id]=10000000-0000-0000-0000-000000000000&include=current_brief&page[limit]=50&page[offset]=0&sort=promoted-desc,starts-desc"
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
        '400':
          description: An error object indicating unsupported request parameters.
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
              examples:
                BeyondMaximumOffset:
                  value:
                    errors:
                    - title: Bad Request
                      status: '400'
                      detail: The property '#/page/offset' did not have a maximum
                        value of 9900, inclusively.
                      source:
                        pointer: "/page/offset"
                InvalidParamValue:
                  value:
                    errors:
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/OrganizationFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/ProgramFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/ProgramBriefFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/RewardRangeFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/SubmissionFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/TargetFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/TargetGroupFieldsEnumBadRequest
                    - title: Bad Request
                      status: '400'
                      detail: The property '#/page/limit' did not have a maximum value
                        of 100, inclusively.
                      source:
                        pointer: "/page/limit"
                    - title: Bad Request
                      status: '400'
                      detail: The property '#/page/offset' did not have a minimum
                        value of 0, inclusively.
                      source:
                        pointer: "/page/offset"
                    - title: Bad Request
                      status: '400'
                      detail: 'The property ''#/include/0'' value ''invalid_resource''
                        did not match one of the following values: current_brief,
                        current_brief.target_groups, current_brief.target_groups.reward_range,
                        current_brief.target_groups.targets, organization, submissions.'
                      source:
                        pointer: "/include/0"
                    - title: Bad Request
                      status: '400'
                      detail: 'The property ''#/sort/0'' value ''invalid_sort'' did
                        not match one of the following values: promoted-desc, promoted-asc,
                        starts-desc, starts-asc, ends-desc, ends-asc, name-desc, name-asc,
                        reward-asc, reward-desc.'
                      source:
                        pointer: "/sort/0"
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
        '404':
          description: An error indicating missing resource.
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
              example:
                errors:
                  "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/NotFoundError
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
      x-codeSamples:
      - label: Shell + Curl
        lang: shell_curl
        source: |-
          curl --request GET \
            --url 'https://api.bugcrowd.com/programs?fields%5Borganization%5D=SOME_ARRAY_VALUE&fields%5Bprogram%5D=SOME_ARRAY_VALUE&fields%5Bprogram_brief%5D=SOME_ARRAY_VALUE&fields%5Breward_range%5D=SOME_ARRAY_VALUE&fields%5Bsubmission%5D=SOME_ARRAY_VALUE&fields%5Btarget%5D=SOME_ARRAY_VALUE&fields%5Btarget_group%5D=SOME_ARRAY_VALUE&page%5Blimit%5D=SOME_INTEGER_VALUE&page%5Boffset%5D=SOME_INTEGER_VALUE&include=SOME_ARRAY_VALUE&filter%5Borganization_id%5D=SOME_ARRAY_VALUE&sort=SOME_ARRAY_VALUE' \
            --header 'Authorization: REPLACE_KEY_VALUE' \
            --header 'Bugcrowd-Version: 2024-01-11'
      - label: Node + Native
        lang: node_native
        source: |-
          const http = require("https");

          const options = {
            "method": "GET",
            "hostname": "api.bugcrowd.com",
            "port": null,
            "path": "/programs?fields%5Borganization%5D=SOME_ARRAY_VALUE&fields%5Bprogram%5D=SOME_ARRAY_VALUE&fields%5Bprogram_brief%5D=SOME_ARRAY_VALUE&fields%5Breward_range%5D=SOME_ARRAY_VALUE&fields%5Bsubmission%5D=SOME_ARRAY_VALUE&fields%5Btarget%5D=SOME_ARRAY_VALUE&fields%5Btarget_group%5D=SOME_ARRAY_VALUE&page%5Blimit%5D=SOME_INTEGER_VALUE&page%5Boffset%5D=SOME_INTEGER_VALUE&include=SOME_ARRAY_VALUE&filter%5Borganization_id%5D=SOME_ARRAY_VALUE&sort=SOME_ARRAY_VALUE",
            "headers": {
              "Bugcrowd-Version": "2024-01-11",
              "Authorization": "REPLACE_KEY_VALUE"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.end();
      - label: Ruby + Native
        lang: ruby_native
        source: |-
          require 'uri'
          require 'net/http'
          require 'openssl'

          url = URI("https://api.bugcrowd.com/programs?fields%5Borganization%5D=SOME_ARRAY_VALUE&fields%5Bprogram%5D=SOME_ARRAY_VALUE&fields%5Bprogram_brief%5D=SOME_ARRAY_VALUE&fields%5Breward_range%5D=SOME_ARRAY_VALUE&fields%5Bsubmission%5D=SOME_ARRAY_VALUE&fields%5Btarget%5D=SOME_ARRAY_VALUE&fields%5Btarget_group%5D=SOME_ARRAY_VALUE&page%5Blimit%5D=SOME_INTEGER_VALUE&page%5Boffset%5D=SOME_INTEGER_VALUE&include=SOME_ARRAY_VALUE&filter%5Borganization_id%5D=SOME_ARRAY_VALUE&sort=SOME_ARRAY_VALUE")

          http = Net::HTTP.new(url.host, url.port)
          http.use_ssl = true
          http.verify_mode = OpenSSL::SSL::VERIFY_NONE

          request = Net::HTTP::Get.new(url)
          request["Bugcrowd-Version"] = '2024-01-11'
          request["Authorization"] = 'REPLACE_KEY_VALUE'

          response = http.request(request)
          puts response.read_body
      - label: Python + Python3
        lang: python_python3
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.bugcrowd.com")

          headers = {
              'Bugcrowd-Version': "2024-01-11",
              'Authorization': "REPLACE_KEY_VALUE"
              }

          conn.request("GET", "/programs?fields%5Borganization%5D=SOME_ARRAY_VALUE&fields%5Bprogram%5D=SOME_ARRAY_VALUE&fields%5Bprogram_brief%5D=SOME_ARRAY_VALUE&fields%5Breward_range%5D=SOME_ARRAY_VALUE&fields%5Bsubmission%5D=SOME_ARRAY_VALUE&fields%5Btarget%5D=SOME_ARRAY_VALUE&fields%5Btarget_group%5D=SOME_ARRAY_VALUE&page%5Blimit%5D=SOME_INTEGER_VALUE&page%5Boffset%5D=SOME_INTEGER_VALUE&include=SOME_ARRAY_VALUE&filter%5Borganization_id%5D=SOME_ARRAY_VALUE&sort=SOME_ARRAY_VALUE", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
  "/programs/{id}":
    get:
      summary: Fetch program
      operationId: getProgram
      tags:
      - Submissions API
      - program_resource
      description: Returns a single program by UUID.
      parameters:
      - "$ref": "#/components/parameters/BugcrowdVersionParameter"
      - "$ref": "#/components/parameters/IDParameter"
      - "$ref": "#/components/parameters/OrganizationFieldsParameter"
      - "$ref": "#/components/parameters/ProgramFieldsParameter"
      - "$ref": "#/components/parameters/ProgramBriefFieldsParameter"
      - "$ref": "#/components/parameters/RewardRangeFieldsParameter"
      - "$ref": "#/components/parameters/SubmissionFieldsParameter"
      - "$ref": "#/components/parameters/TargetFieldsParameter"
      - "$ref": "#/components/parameters/TargetGroupFieldsParameter"
      - "$ref": "#/components/parameters/ProgramIncludeParameter"
      responses:
        '200':
          description: A JSON object with a `data` property containing a program object.
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": "#/components/schemas/GetProgramResponse"
              examples:
                ValidExample:
                  value:
                    data:
                      id:
                        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                      type: program
                      attributes:
                        code: code
                      relationships:
                        organization:
                          data:
                            id:
                              "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                            type: organization
                          links:
                            related:
                              href: "/organizations/10000000-0000-0000-0000-000000000000"
                      links:
                        self: "/programs/10000000-0000-0000-0000-000000000000"
                    included:
                    - id:
                        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                      type: program_brief
                      attributes:
                        demo: false
                      relationships:
                        program:
                          data:
                            id:
                              "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                            type: program
                          links:
                            related:
                              href: "/programs/10000000-0000-0000-0000-000000000000"
                      links:
                        self: "/program_briefs/10000000-0000-0000-0000-000000000000"
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
        '400':
          description: An error object indicating unsupported request parameters.
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
              examples:
                InvalidParamValue:
                  value:
                    errors:
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/OrganizationFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/ProgramFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/ProgramBriefFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/RewardRangeFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/SubmissionFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/TargetFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/TargetGroupFieldsEnumBadRequest
                    - title: Bad Request
                      status: '400'
                      detail: 'The property ''#/include/0'' value ''invalid_resource''
                        did not match one of the following values: current_brief,
                        current_brief.target_groups, current_brief.target_groups.reward_range,
                        current_brief.target_groups.targets, organization, submissions.'
                      source:
                        pointer: "/include/0"
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
        '404':
          description: An error indicating missing resource.
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
              examples:
                InvalidUrlId:
                  value:
                    errors:
                      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/NotFoundError
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
      x-codeSamples:
      - label: Shell + Curl
        lang: shell_curl
        source: |-
          curl --request GET \
            --url 'https://api.bugcrowd.com/programs/%7Bid%7D?fields%5Borganization%5D=SOME_ARRAY_VALUE&fields%5Bprogram%5D=SOME_ARRAY_VALUE&fields%5Bprogram_brief%5D=SOME_ARRAY_VALUE&fields%5Breward_range%5D=SOME_ARRAY_VALUE&fields%5Bsubmission%5D=SOME_ARRAY_VALUE&fields%5Btarget%5D=SOME_ARRAY_VALUE&fields%5Btarget_group%5D=SOME_ARRAY_VALUE&include=SOME_ARRAY_VALUE' \
            --header 'Authorization: REPLACE_KEY_VALUE' \
            --header 'Bugcrowd-Version: 2024-01-11'
      - label: Node + Native
        lang: node_native
        source: |-
          const http = require("https");

          const options = {
            "method": "GET",
            "hostname": "api.bugcrowd.com",
            "port": null,
            "path": "/programs/%7Bid%7D?fields%5Borganization%5D=SOME_ARRAY_VALUE&fields%5Bprogram%5D=SOME_ARRAY_VALUE&fields%5Bprogram_brief%5D=SOME_ARRAY_VALUE&fields%5Breward_range%5D=SOME_ARRAY_VALUE&fields%5Bsubmission%5D=SOME_ARRAY_VALUE&fields%5Btarget%5D=SOME_ARRAY_VALUE&fields%5Btarget_group%5D=SOME_ARRAY_VALUE&include=SOME_ARRAY_VALUE",
            "headers": {
              "Bugcrowd-Version": "2024-01-11",
              "Authorization": "REPLACE_KEY_VALUE"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.end();
      - label: Ruby + Native
        lang: ruby_native
        source: |-
          require 'uri'
          require 'net/http'
          require 'openssl'

          url = URI("https://api.bugcrowd.com/programs/%7Bid%7D?fields%5Borganization%5D=SOME_ARRAY_VALUE&fields%5Bprogram%5D=SOME_ARRAY_VALUE&fields%5Bprogram_brief%5D=SOME_ARRAY_VALUE&fields%5Breward_range%5D=SOME_ARRAY_VALUE&fields%5Bsubmission%5D=SOME_ARRAY_VALUE&fields%5Btarget%5D=SOME_ARRAY_VALUE&fields%5Btarget_group%5D=SOME_ARRAY_VALUE&include=SOME_ARRAY_VALUE")

          http = Net::HTTP.new(url.host, url.port)
          http.use_ssl = true
          http.verify_mode = OpenSSL::SSL::VERIFY_NONE

          request = Net::HTTP::Get.new(url)
          request["Bugcrowd-Version"] = '2024-01-11'
          request["Authorization"] = 'REPLACE_KEY_VALUE'

          response = http.request(request)
          puts response.read_body
      - label: Python + Python3
        lang: python_python3
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.bugcrowd.com")

          headers = {
              'Bugcrowd-Version': "2024-01-11",
              'Authorization': "REPLACE_KEY_VALUE"
              }

          conn.request("GET", "/programs/%7Bid%7D?fields%5Borganization%5D=SOME_ARRAY_VALUE&fields%5Bprogram%5D=SOME_ARRAY_VALUE&fields%5Bprogram_brief%5D=SOME_ARRAY_VALUE&fields%5Breward_range%5D=SOME_ARRAY_VALUE&fields%5Bsubmission%5D=SOME_ARRAY_VALUE&fields%5Btarget%5D=SOME_ARRAY_VALUE&fields%5Btarget_group%5D=SOME_ARRAY_VALUE&include=SOME_ARRAY_VALUE", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
  "/submissions/{id}":
    get:
      summary: Fetch submission
      operationId: getSubmission
      tags:
      - Submissions API
      - submission_resource
      description: Returns a single submission by UUID.
      parameters:
      - "$ref": "#/components/parameters/BugcrowdVersionParameter"
      - "$ref": "#/components/parameters/IDParameter"
      - "$ref": "#/components/parameters/ActivityFieldsParameter"
      - "$ref": "#/components/parameters/ClaimTicketFieldsParameter"
      - "$ref": "#/components/parameters/CommentFieldsParameter"
      - "$ref": "#/components/parameters/CvssVectorFieldsParameter"
      - "$ref": "#/components/parameters/ExternalIssueFieldsParameter"
      - "$ref": "#/components/parameters/FileAttachmentFieldsParameter"
      - "$ref": "#/components/parameters/IdentityFieldsParameter"
      - "$ref": "#/components/parameters/MonetaryRewardFieldsParameter"
      - "$ref": "#/components/parameters/OrganizationFieldsParameter"
      - "$ref": "#/components/parameters/PaymentFieldsParameter"
      - "$ref": "#/components/parameters/ProgramFieldsParameter"
      - "$ref": "#/components/parameters/ProgramBriefFieldsParameter"
      - "$ref": "#/components/parameters/SubmissionFieldsParameter"
      - "$ref": "#/components/parameters/TargetFieldsParameter"
      - "$ref": "#/components/parameters/TargetGroupFieldsParameter"
      - "$ref": "#/components/parameters/SubmissionIncludeParameter"
      responses:
        '200':
          description: A JSON object with a `data` property containing a submission
            object.
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": "#/components/schemas/GetSubmissionResponse"
              examples:
                ValidExample:
                  value:
                    data:
                      id:
                        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                      type: submission
                      attributes:
                        state: new
                        duplicate: true
                      relationships: {}
                      links:
                        self: "/submissions/10000000-0000-0000-0000-000000000000"
                    included:
                    - id:
                        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                      type: program
                      attributes:
                        code: code
                      relationships:
                        organization:
                          data:
                            id:
                              "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                            type: organization
                          links:
                            related:
                              href: "/organizations/10000000-0000-0000-0000-000000000000"
                      links:
                        self: "/programs/10000000-0000-0000-0000-000000000000"
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
        '400':
          description: An error object indicating unsupported request parameters.
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
              examples:
                InvalidParamValue:
                  value:
                    errors:
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/ActivityFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/ClaimTicketFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/CommentFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/CvssVectorFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/ExternalIssueFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/FileAttachmentFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/IdentityFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/MonetaryRewardFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/OrganizationFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/PaymentFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/ProgramFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/ProgramBriefFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/SubmissionFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/TargetFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/TargetGroupFieldsEnumBadRequest
                    - title: Bad Request
                      status: '400'
                      detail: 'The property ''#/include/0'' value ''invalid_resource''
                        did not match one of the following values: activities, activities.actor,
                        assignee, claim_ticket, comments, comments.author, comments.file_attachments,
                        cvss_vector, duplicates, duplicate_of, external_issues, file_attachments,
                        monetary_rewards, monetary_rewards.payments, program, program.current_brief,
                        program.current_brief.target_groups, program.organization,
                        researcher, target.'
                      source:
                        pointer: "/include/0"
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
        '404':
          description: An error indicating missing resource.
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
              examples:
                InvalidUrlId:
                  value:
                    errors:
                      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/NotFoundError
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
      x-codeSamples:
      - label: Shell + Curl
        lang: shell_curl
        source: |-
          curl --request GET \
            --url 'https://api.bugcrowd.com/submissions/%7Bid%7D?fields%5Bactivity%5D=SOME_ARRAY_VALUE&fields%5Bclaim_ticket%5D=SOME_ARRAY_VALUE&fields%5Bcomment%5D=SOME_ARRAY_VALUE&fields%5Bcvss_vector%5D=SOME_ARRAY_VALUE&fields%5Bexternal_issue%5D=SOME_ARRAY_VALUE&fields%5Bfile_attachment%5D=SOME_ARRAY_VALUE&fields%5Bidentity%5D=SOME_ARRAY_VALUE&fields%5Bmonetary_reward%5D=SOME_ARRAY_VALUE&fields%5Borganization%5D=SOME_ARRAY_VALUE&fields%5Bpayment%5D=SOME_ARRAY_VALUE&fields%5Bprogram%5D=SOME_ARRAY_VALUE&fields%5Bprogram_brief%5D=SOME_ARRAY_VALUE&fields%5Bsubmission%5D=SOME_ARRAY_VALUE&fields%5Btarget%5D=SOME_ARRAY_VALUE&fields%5Btarget_group%5D=SOME_ARRAY_VALUE&include=SOME_ARRAY_VALUE' \
            --header 'Authorization: REPLACE_KEY_VALUE' \
            --header 'Bugcrowd-Version: 2024-01-11'
      - label: Node + Native
        lang: node_native
        source: |-
          const http = require("https");

          const options = {
            "method": "GET",
            "hostname": "api.bugcrowd.com",
            "port": null,
            "path": "/submissions/%7Bid%7D?fields%5Bactivity%5D=SOME_ARRAY_VALUE&fields%5Bclaim_ticket%5D=SOME_ARRAY_VALUE&fields%5Bcomment%5D=SOME_ARRAY_VALUE&fields%5Bcvss_vector%5D=SOME_ARRAY_VALUE&fields%5Bexternal_issue%5D=SOME_ARRAY_VALUE&fields%5Bfile_attachment%5D=SOME_ARRAY_VALUE&fields%5Bidentity%5D=SOME_ARRAY_VALUE&fields%5Bmonetary_reward%5D=SOME_ARRAY_VALUE&fields%5Borganization%5D=SOME_ARRAY_VALUE&fields%5Bpayment%5D=SOME_ARRAY_VALUE&fields%5Bprogram%5D=SOME_ARRAY_VALUE&fields%5Bprogram_brief%5D=SOME_ARRAY_VALUE&fields%5Bsubmission%5D=SOME_ARRAY_VALUE&fields%5Btarget%5D=SOME_ARRAY_VALUE&fields%5Btarget_group%5D=SOME_ARRAY_VALUE&include=SOME_ARRAY_VALUE",
            "headers": {
              "Bugcrowd-Version": "2024-01-11",
              "Authorization": "REPLACE_KEY_VALUE"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.end();
      - label: Ruby + Native
        lang: ruby_native
        source: |-
          require 'uri'
          require 'net/http'
          require 'openssl'

          url = URI("https://api.bugcrowd.com/submissions/%7Bid%7D?fields%5Bactivity%5D=SOME_ARRAY_VALUE&fields%5Bclaim_ticket%5D=SOME_ARRAY_VALUE&fields%5Bcomment%5D=SOME_ARRAY_VALUE&fields%5Bcvss_vector%5D=SOME_ARRAY_VALUE&fields%5Bexternal_issue%5D=SOME_ARRAY_VALUE&fields%5Bfile_attachment%5D=SOME_ARRAY_VALUE&fields%5Bidentity%5D=SOME_ARRAY_VALUE&fields%5Bmonetary_reward%5D=SOME_ARRAY_VALUE&fields%5Borganization%5D=SOME_ARRAY_VALUE&fields%5Bpayment%5D=SOME_ARRAY_VALUE&fields%5Bprogram%5D=SOME_ARRAY_VALUE&fields%5Bprogram_brief%5D=SOME_ARRAY_VALUE&fields%5Bsubmission%5D=SOME_ARRAY_VALUE&fields%5Btarget%5D=SOME_ARRAY_VALUE&fields%5Btarget_group%5D=SOME_ARRAY_VALUE&include=SOME_ARRAY_VALUE")

          http = Net::HTTP.new(url.host, url.port)
          http.use_ssl = true
          http.verify_mode = OpenSSL::SSL::VERIFY_NONE

          request = Net::HTTP::Get.new(url)
          request["Bugcrowd-Version"] = '2024-01-11'
          request["Authorization"] = 'REPLACE_KEY_VALUE'

          response = http.request(request)
          puts response.read_body
      - label: Python + Python3
        lang: python_python3
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.bugcrowd.com")

          headers = {
              'Bugcrowd-Version': "2024-01-11",
              'Authorization': "REPLACE_KEY_VALUE"
              }

          conn.request("GET", "/submissions/%7Bid%7D?fields%5Bactivity%5D=SOME_ARRAY_VALUE&fields%5Bclaim_ticket%5D=SOME_ARRAY_VALUE&fields%5Bcomment%5D=SOME_ARRAY_VALUE&fields%5Bcvss_vector%5D=SOME_ARRAY_VALUE&fields%5Bexternal_issue%5D=SOME_ARRAY_VALUE&fields%5Bfile_attachment%5D=SOME_ARRAY_VALUE&fields%5Bidentity%5D=SOME_ARRAY_VALUE&fields%5Bmonetary_reward%5D=SOME_ARRAY_VALUE&fields%5Borganization%5D=SOME_ARRAY_VALUE&fields%5Bpayment%5D=SOME_ARRAY_VALUE&fields%5Bprogram%5D=SOME_ARRAY_VALUE&fields%5Bprogram_brief%5D=SOME_ARRAY_VALUE&fields%5Bsubmission%5D=SOME_ARRAY_VALUE&fields%5Btarget%5D=SOME_ARRAY_VALUE&fields%5Btarget_group%5D=SOME_ARRAY_VALUE&include=SOME_ARRAY_VALUE", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
    patch:
      summary: Update submission
      operationId: updateSubmission
      tags:
      - Submissions API
      - submission_resource
      description: Update a single submission by UUID
      parameters:
      - "$ref": "#/components/parameters/BugcrowdVersionParameter"
      - "$ref": "#/components/parameters/IDParameter"
      requestBody:
        description: Update a submission
        required: true
        content:
          application/vnd.bugcrowd.v4+json:
            schema:
              "$ref": "#/components/schemas/UpdateSubmissionRequest"
            examples:
              ValidExample:
                value:
                  data:
                    type: submission
                    attributes:
                      severity: 2
                    relationships:
                      assignee:
                        data:
                          type: identity
                          id:
                            "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
              InvalidProvidedType:
                value:
                  data:
                    type: invalid_type
              ClientGeneratedID:
                value:
                  data:
                    type: submission
                    id:
                      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
              InvalidAttribute:
                value:
                  data:
                    type: submission
                    attributes:
                      invalid_attribute: value
              ManyInvalidParams:
                value:
                  data:
                    type: submission
                    attributes:
                      invalid_attribute: value
                      severity: 99
              InvalidAssignee:
                value:
                  data:
                    type: submission
                    relationships:
                      assignee:
                        data:
                          id: invalid_uuid
                          type: identity
              InvalidCvssVector:
                value:
                  data:
                    type: submission
                    relationships:
                      cvss_vector:
                        data:
                          id: invalid_uuid
                          type: cvss_vector
              InvalidDuplicateOf:
                value:
                  data:
                    type: submission
                    relationships:
                      duplicate_of:
                        data:
                          id: invalid_uuid
                          type: submission
              EmptyObjectForNullableRelationship:
                value:
                  data:
                    type: submission
                    relationships:
                      assignee: {}
              EmptyDataForNullableRelationship:
                value:
                  data:
                    type: submission
                    relationships:
                      assignee:
                        data: {}
      responses:
        '200':
          description: A JSON object with a `data` property containing updated fields.
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": "#/components/schemas/UpdateSubmissionResponse"
              examples:
                ValidExample:
                  value:
                    data:
                      id:
                        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                      type: submission
                      attributes:
                        bug_url: http://emard.io/evelina.haley
                        custom_fields:
                          custom_field_label:
                        description: This contains a POC
                        duplicate: false
                        extra_info:
                        http_request:
                        remediation_advice:
                        researcher_email:
                        source: platform
                        submitted_at: '2018-11-13T20:20:39.000Z'
                        title: This is a good title
                        vrt_id: other
                        vrt_version: '1.8'
                        vulnerability_references:
                        severity:
                        state: unresolved
                      relationships:
                        program:
                          data:
                            id:
                              "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                            type: program
                          links:
                            related:
                              href: "/programs/10000000-0000-0000-0000-000000000000"
                        cvss_vector:
                          data:
                            id:
                              "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                            type: cvss_vector
                          links:
                            related:
                              href: "(NOT IMPLEMENTED YET)"
                        duplicate_of:
                          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/EmptySingleRelationship
                        duplicates:
                          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/EmptyManyRelationship
                        external_issues:
                          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/EmptyManyRelationship
                        researcher:
                          data:
                            id:
                              "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                            type: identity
                          links:
                            related:
                              href: "(NOT IMPLEMENTED YET)"
                        claim_ticket:
                          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/EmptySingleRelationship
                        assignee:
                          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/EmptySingleRelationship
                        activities:
                          data:
                          - id:
                              "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                            type: activity
                          links:
                            related:
                              href: "(NOT IMPLEMENTED YET)"
                              meta:
                                count: 1
                                total_hits: 1
                        comments:
                          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/EmptyManyRelationship
                        monetary_rewards:
                          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/EmptyManyRelationship
                        file_attachments:
                          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/EmptyManyRelationship
                        target:
                          data:
                            id:
                              "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                            type: target
                          links:
                            related:
                              href: "(NOT IMPLEMENTED YET)"
                      links:
                        self: "/submissions/10000000-0000-0000-0000-000000000000"
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
        '400':
          description: Bad request
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
              examples:
                InvalidAttribute:
                  value:
                    errors:
                    - title: Bad Request
                      status: '400'
                      detail: The property '#/data/attributes' contains additional
                        properties ['invalid_attribute'] outside of the schema when
                        none are allowed.
                      source:
                        pointer: "/data/attributes"
                ManyInvalidParams:
                  value:
                    errors:
                    - title: Bad Request
                      status: '400'
                      detail: The property '#/data/attributes' contains additional
                        properties ['invalid_attribute'] outside of the schema when
                        none are allowed.
                      source:
                        pointer: "/data/attributes"
                    - title: Bad Request
                      status: '400'
                      detail: The property '#/data/attributes/severity' did not have
                        a maximum value of 5, inclusively.
                      source:
                        pointer: "/data/attributes/severity"
                EmptyObjectForNullableRelationship:
                  value:
                    errors:
                    - title: Bad Request
                      status: '400'
                      detail: The property '#/data/relationships/assignee' did not
                        contain a required property of 'data'.
                      source:
                        pointer: "/data/relationships/assignee"
                EmptyDataForNullableRelationship:
                  value:
                    errors:
                    - title: Bad Request
                      status: '400'
                      detail: The property '#/data/relationships/assignee/data' did
                        not contain a required property of 'id'.
                      source:
                        pointer: "/data/relationships/assignee/data"
                    - title: Bad Request
                      status: '400'
                      detail: The property '#/data/relationships/assignee/data' did
                        not contain a required property of 'type'.
                      source:
                        pointer: "/data/relationships/assignee/data"
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
        '404':
          description: An error indicating missing resource.
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
              examples:
                InvalidUrlId:
                  value:
                    errors:
                      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/NotFoundError
                InvalidAssignee:
                  value:
                    errors:
                      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/NotFoundError
                InvalidCvssVector:
                  value:
                    errors:
                      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/NotFoundError
                InvalidDuplicateOf:
                  value:
                    errors:
                      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/NotFoundError
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
        '409':
          description: Incorrect data type parameter
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
              examples:
                InvalidProvidedType:
                  value:
                    errors:
                    - title: Conflict
                      status: '409'
                      detail: 'Provided type: invalid_type is not supported by this
                        endpoint.'
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
      x-codeSamples:
      - label: Shell + Curl
        lang: shell_curl
        source: |-
          curl --request PATCH \
            --url https://api.bugcrowd.com/submissions/%7Bid%7D \
            --header 'Authorization: REPLACE_KEY_VALUE' \
            --header 'Bugcrowd-Version: 2024-01-11'
      - label: Node + Native
        lang: node_native
        source: |-
          const http = require("https");

          const options = {
            "method": "PATCH",
            "hostname": "api.bugcrowd.com",
            "port": null,
            "path": "/submissions/%7Bid%7D",
            "headers": {
              "Bugcrowd-Version": "2024-01-11",
              "Authorization": "REPLACE_KEY_VALUE"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.end();
      - label: Ruby + Native
        lang: ruby_native
        source: |-
          require 'uri'
          require 'net/http'
          require 'openssl'

          url = URI("https://api.bugcrowd.com/submissions/%7Bid%7D")

          http = Net::HTTP.new(url.host, url.port)
          http.use_ssl = true
          http.verify_mode = OpenSSL::SSL::VERIFY_NONE

          request = Net::HTTP::Patch.new(url)
          request["Bugcrowd-Version"] = '2024-01-11'
          request["Authorization"] = 'REPLACE_KEY_VALUE'

          response = http.request(request)
          puts response.read_body
      - label: Python + Python3
        lang: python_python3
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.bugcrowd.com")

          headers = {
              'Bugcrowd-Version': "2024-01-11",
              'Authorization': "REPLACE_KEY_VALUE"
              }

          conn.request("PATCH", "/submissions/%7Bid%7D", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
  "/submissions":
    get:
      summary: Index submissions
      operationId: listSubmissions
      tags:
      - Submissions API
      - submission_resource
      description: Returns a filtered list of submissions based on tokenized search
        and sort parameters.
      parameters:
      - "$ref": "#/components/parameters/BugcrowdVersionParameter"
      - "$ref": "#/components/parameters/ActivityFieldsParameter"
      - "$ref": "#/components/parameters/ClaimTicketFieldsParameter"
      - "$ref": "#/components/parameters/CommentFieldsParameter"
      - "$ref": "#/components/parameters/CvssVectorFieldsParameter"
      - "$ref": "#/components/parameters/ExternalIssueFieldsParameter"
      - "$ref": "#/components/parameters/FileAttachmentFieldsParameter"
      - "$ref": "#/components/parameters/IdentityFieldsParameter"
      - "$ref": "#/components/parameters/MonetaryRewardFieldsParameter"
      - "$ref": "#/components/parameters/OrganizationFieldsParameter"
      - "$ref": "#/components/parameters/PaymentFieldsParameter"
      - "$ref": "#/components/parameters/ProgramFieldsParameter"
      - "$ref": "#/components/parameters/ProgramBriefFieldsParameter"
      - "$ref": "#/components/parameters/SubmissionFieldsParameter"
      - "$ref": "#/components/parameters/TargetFieldsParameter"
      - "$ref": "#/components/parameters/TargetGroupFieldsParameter"
      - "$ref": "#/components/parameters/PageLimitParameter"
      - "$ref": "#/components/parameters/PageOffsetParameter"
      - "$ref": "#/components/parameters/SubmissionIncludeParameter"
      - name: filter[assignee]
        description: |
          Filter submissions by assignee.
          Use either an email address or the keywords `me` or `none`
        in: query
        required: false
        explode: false
        schema:
          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/SubmissionFilterAssignee
        examples:
          ValidExample:
            value: me,none,user@example.com
          DuplicateFilterValues:
            value: me,me
      - name: filter[blocked_by]
        description: Filter submissions by blocked_by
        in: query
        required: false
        explode: false
        schema:
          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/SubmissionFilterBlockedBy
      - name: filter[duplicate]
        description: Filter submissions by duplicate
        in: query
        required: false
        explode: false
        schema:
          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/SubmissionFilterDuplicate
      - name: filter[payments]
        description: Filter submissions by payment information
        in: query
        required: false
        explode: false
        schema:
          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/SubmissionFilterPayments
      - name: filter[points]
        description: Filter submissions by points
        in: query
        required: false
        explode: false
        schema:
          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/SubmissionFilterPoints
      - name: filter[program]
        description: Filter submissions by program
        in: query
        required: false
        explode: false
        schema:
          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/SubmissionFilterProgram
      - name: filter[researcher]
        description: Filter submissions by researcher
        in: query
        required: false
        explode: false
        schema:
          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/SubmissionFilterResearcher
      - name: filter[retest]
        description: Filter submissions by retest
        in: query
        required: false
        explode: false
        schema:
          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/SubmissionFilterRetest
      - name: filter[search]
        description: Filter submissions by searching through title, description, and
          comment text
        in: query
        required: false
        explode: false
        schema:
          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/SubmissionFilterFreeTextSearch
      - name: filter[severity]
        description: Filter submissions by severity
        in: query
        required: false
        explode: false
        schema:
          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/SubmissionFilterSeverity
        examples:
          ValidExample:
            value: '1,2'
          InvalidParamValue:
            value: '1,7'
          InvalidParamType:
            value: "[1]"
      - name: filter[source]
        description: Filter submissions by source
        in: query
        required: false
        explode: false
        schema:
          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/SubmissionFilterSource
      - name: filter[state]
        description: Filter submissions by state
        in: query
        required: false
        explode: false
        schema:
          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/SubmissionFilterState
      - name: filter[submitted]
        description: Filter submissions by submitted timestamp
        in: query
        required: false
        explode: false
        schema:
          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/SubmissionFilterSubmitted
      - name: filter[target]
        description: Filter submissions by target name
        in: query
        required: false
        explode: false
        schema:
          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/SubmissionFilterTarget
      - name: filter[target_type]
        description: Filter submissions by target_type
        in: query
        required: false
        explode: false
        schema:
          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/SubmissionFilterTargetType
      - name: filter[updated]
        description: Filter submissions by updated timestamp
        in: query
        required: false
        explode: false
        schema:
          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/SubmissionFilterUpdated
      - name: filter[vrt]
        description: Filter submissions by `.` separated vrt id
        in: query
        required: false
        explode: false
        schema:
          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/SubmissionFilterVrt
      - name: sort
        description: Tokenized search sort options
        in: query
        required: false
        explode: false
        schema:
          type: array
          maxItems: 6
          uniqueItems: true
          items:
            type: string
            enum:
            - submitted-asc
            - submitted-desc
            - severity-asc
            - severity-desc
            - updated-asc
            - updated-desc
            example: submitted-desc
        examples:
          ValidExample:
            value: submitted-asc,severity-desc
      responses:
        '200':
          description: A JSON object with a `data` property containing an array of
            submission objects.
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": "#/components/schemas/ListSubmissionsResponse"
              examples:
                ValidExample:
                  value:
                    data:
                    - id:
                        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                      type: submission
                      attributes:
                        state: new
                        duplicate: true
                      relationships: {}
                      links:
                        self: "/submissions/10000000-0000-0000-0000-000000000000"
                    - id: 20000000-0000-0000-0000-000000000000
                      type: submission
                      attributes:
                        state: new
                        duplicate: true
                      relationships: {}
                      links:
                        self: "/submissions/20000000-0000-0000-0000-000000000000"
                    included:
                    - id:
                        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                      type: program
                      attributes:
                        code: code
                      relationships:
                        organization:
                          data:
                            id:
                              "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                            type: organization
                          links:
                            related:
                              href: "/organizations/10000000-0000-0000-0000-000000000000"
                      links:
                        self: "/programs/10000000-0000-0000-0000-000000000000"
                    meta:
                      total_hits: 2
                      count: 2
                    links:
                      self: "/submissions?fields[activity]=key,submission&fields[claim_ticket]=status,claimed_at&fields[comment]=body,author&fields[cvss_vector]=version,score&fields[external_issue]=remote_url,remote_id,resource,integration&fields[file_attachment]=file_name,download_url&fields[identity]=name,email&fields[monetary_reward]=formatted_amount,cancelled_at&fields[organization]=name,programs&fields[payment]=amount_cents,monetary_reward&fields[program]=code,organization&fields[program_brief]=demo,program&fields[submission]=state,duplicate&fields[target]=name,category&fields[target_group]=name,in_scope&filter[assignee]=me,none,user@example.com&filter[severity]=1,2&include=program&page[limit]=50&page[offset]=0&sort=submitted-asc,severity-desc"
                      next: "/submissions?fields[activity]=key,submission&fields[claim_ticket]=status,claimed_at&fields[comment]=body,author&fields[cvss_vector]=version,score&fields[external_issue]=remote_url,remote_id,resource,integration&fields[file_attachment]=file_name,download_url&fields[identity]=name,email&fields[monetary_reward]=formatted_amount,cancelled_at&fields[organization]=name,programs&fields[payment]=amount_cents,monetary_reward&fields[program]=code,organization&fields[program_brief]=demo,program&fields[submission]=state,duplicate&fields[target]=name,category&fields[target_group]=name,in_scope&filter[assignee]=me,none,user@example.com&filter[severity]=1,2&include=program&page[limit]=50&page[offset]=50&sort=submitted-asc,severity-desc"
                      previous: "/submissions?fields[activity]=key,submission&fields[claim_ticket]=status,claimed_at&fields[comment]=body,author&fields[cvss_vector]=version,score&fields[external_issue]=remote_url,remote_id,resource,integration&fields[file_attachment]=file_name,download_url&fields[identity]=name,email&fields[monetary_reward]=formatted_amount,cancelled_at&fields[organization]=name,programs&fields[payment]=amount_cents,monetary_reward&fields[program]=code,organization&fields[program_brief]=demo,program&fields[submission]=state,duplicate&fields[target]=name,category&fields[target_group]=name,in_scope&filter[assignee]=me,none,user@example.com&filter[severity]=1,2&include=program&page[limit]=50&page[offset]=0&sort=submitted-asc,severity-desc"
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
        '400':
          description: An error object indicating unsupported request parameters.
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
              examples:
                BeyondMaximumOffset:
                  value:
                    errors:
                    - title: Bad Request
                      status: '400'
                      detail: The property '#/page/offset' did not have a maximum
                        value of 9900, inclusively.
                      source:
                        pointer: "/page/offset"
                InvalidParamValue:
                  value:
                    errors:
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/ActivityFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/ClaimTicketFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/CommentFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/CvssVectorFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/ExternalIssueFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/FileAttachmentFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/IdentityFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/MonetaryRewardFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/OrganizationFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/PaymentFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/ProgramFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/ProgramBriefFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/SubmissionFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/TargetFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/TargetGroupFieldsEnumBadRequest
                    - title: Bad Request
                      status: '400'
                      detail: The property '#/page/limit' did not have a maximum value
                        of 100, inclusively.
                      source:
                        pointer: "/page/limit"
                    - title: Bad Request
                      status: '400'
                      detail: The property '#/page/offset' did not have a minimum
                        value of 0, inclusively.
                      source:
                        pointer: "/page/offset"
                    - title: Bad Request
                      status: '400'
                      detail: 'The property ''#/include/0'' value ''invalid_resource''
                        did not match one of the following values: activities, activities.actor,
                        assignee, claim_ticket, comments, comments.author, comments.file_attachments,
                        cvss_vector, duplicates, duplicate_of, external_issues, file_attachments,
                        monetary_rewards, monetary_rewards.payments, program, program.current_brief,
                        program.current_brief.target_groups, program.organization,
                        researcher, target.'
                      source:
                        pointer: "/include/0"
                    - title: Bad Request
                      status: '400'
                      detail: The property '#/filter/severity/1' did not have a maximum
                        value of 5, inclusively.
                      source:
                        pointer: "/filter/severity/1"
                InvalidParamType:
                  value:
                    errors:
                    - title: Bad Request
                      status: '400'
                      detail: 'The property ''#/page/offset'' of type string did not
                        match the following type: integer.'
                      source:
                        pointer: "/page/offset"
                    - title: Bad Request
                      status: '400'
                      detail: 'The property ''#/filter/severity/0'' of type string
                        did not match the following type: integer.'
                      source:
                        pointer: "/filter/severity/0"
                DuplicateFilterValues:
                  value:
                    errors:
                    - title: Bad Request
                      status: '400'
                      detail: The property '#/filter/assignee' contained duplicated
                        array values.
                      source:
                        pointer: "/filter/assignee"
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
        '404':
          description: An error indicating missing resource.
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
              example:
                errors:
                  "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/NotFoundError
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
      x-codeSamples:
      - label: Shell + Curl
        lang: shell_curl
        source: |-
          curl --request GET \
            --url 'https://api.bugcrowd.com/submissions?fields%5Bactivity%5D=SOME_ARRAY_VALUE&fields%5Bclaim_ticket%5D=SOME_ARRAY_VALUE&fields%5Bcomment%5D=SOME_ARRAY_VALUE&fields%5Bcvss_vector%5D=SOME_ARRAY_VALUE&fields%5Bexternal_issue%5D=SOME_ARRAY_VALUE&fields%5Bfile_attachment%5D=SOME_ARRAY_VALUE&fields%5Bidentity%5D=SOME_ARRAY_VALUE&fields%5Bmonetary_reward%5D=SOME_ARRAY_VALUE&fields%5Borganization%5D=SOME_ARRAY_VALUE&fields%5Bpayment%5D=SOME_ARRAY_VALUE&fields%5Bprogram%5D=SOME_ARRAY_VALUE&fields%5Bprogram_brief%5D=SOME_ARRAY_VALUE&fields%5Bsubmission%5D=SOME_ARRAY_VALUE&fields%5Btarget%5D=SOME_ARRAY_VALUE&fields%5Btarget_group%5D=SOME_ARRAY_VALUE&page%5Blimit%5D=SOME_INTEGER_VALUE&page%5Boffset%5D=SOME_INTEGER_VALUE&include=SOME_ARRAY_VALUE&filter%5Bassignee%5D=SOME_ARRAY_VALUE&filter%5Bblocked_by%5D=SOME_ARRAY_VALUE&filter%5Bduplicate%5D=SOME_BOOLEAN_VALUE&filter%5Bpayments%5D=SOME_ARRAY_VALUE&filter%5Bpoints%5D=SOME_ARRAY_VALUE&filter%5Bprogram%5D=SOME_ARRAY_VALUE&filter%5Bresearcher%5D=SOME_ARRAY_VALUE&filter%5Bretest%5D=SOME_ARRAY_VALUE&filter%5Bsearch%5D=SOME_STRING_VALUE&filter%5Bseverity%5D=SOME_ARRAY_VALUE&filter%5Bsource%5D=SOME_ARRAY_VALUE&filter%5Bstate%5D=SOME_ARRAY_VALUE&filter%5Bsubmitted%5D=SOME_STRING_VALUE&filter%5Btarget%5D=SOME_ARRAY_VALUE&filter%5Btarget_type%5D=SOME_ARRAY_VALUE&filter%5Bupdated%5D=SOME_STRING_VALUE&filter%5Bvrt%5D=cross_site_scripting_xss&sort=SOME_ARRAY_VALUE' \
            --header 'Authorization: REPLACE_KEY_VALUE' \
            --header 'Bugcrowd-Version: 2024-01-11'
      - label: Node + Native
        lang: node_native
        source: |-
          const http = require("https");

          const options = {
            "method": "GET",
            "hostname": "api.bugcrowd.com",
            "port": null,
            "path": "/submissions?fields%5Bactivity%5D=SOME_ARRAY_VALUE&fields%5Bclaim_ticket%5D=SOME_ARRAY_VALUE&fields%5Bcomment%5D=SOME_ARRAY_VALUE&fields%5Bcvss_vector%5D=SOME_ARRAY_VALUE&fields%5Bexternal_issue%5D=SOME_ARRAY_VALUE&fields%5Bfile_attachment%5D=SOME_ARRAY_VALUE&fields%5Bidentity%5D=SOME_ARRAY_VALUE&fields%5Bmonetary_reward%5D=SOME_ARRAY_VALUE&fields%5Borganization%5D=SOME_ARRAY_VALUE&fields%5Bpayment%5D=SOME_ARRAY_VALUE&fields%5Bprogram%5D=SOME_ARRAY_VALUE&fields%5Bprogram_brief%5D=SOME_ARRAY_VALUE&fields%5Bsubmission%5D=SOME_ARRAY_VALUE&fields%5Btarget%5D=SOME_ARRAY_VALUE&fields%5Btarget_group%5D=SOME_ARRAY_VALUE&page%5Blimit%5D=SOME_INTEGER_VALUE&page%5Boffset%5D=SOME_INTEGER_VALUE&include=SOME_ARRAY_VALUE&filter%5Bassignee%5D=SOME_ARRAY_VALUE&filter%5Bblocked_by%5D=SOME_ARRAY_VALUE&filter%5Bduplicate%5D=SOME_BOOLEAN_VALUE&filter%5Bpayments%5D=SOME_ARRAY_VALUE&filter%5Bpoints%5D=SOME_ARRAY_VALUE&filter%5Bprogram%5D=SOME_ARRAY_VALUE&filter%5Bresearcher%5D=SOME_ARRAY_VALUE&filter%5Bretest%5D=SOME_ARRAY_VALUE&filter%5Bsearch%5D=SOME_STRING_VALUE&filter%5Bseverity%5D=SOME_ARRAY_VALUE&filter%5Bsource%5D=SOME_ARRAY_VALUE&filter%5Bstate%5D=SOME_ARRAY_VALUE&filter%5Bsubmitted%5D=SOME_STRING_VALUE&filter%5Btarget%5D=SOME_ARRAY_VALUE&filter%5Btarget_type%5D=SOME_ARRAY_VALUE&filter%5Bupdated%5D=SOME_STRING_VALUE&filter%5Bvrt%5D=cross_site_scripting_xss&sort=SOME_ARRAY_VALUE",
            "headers": {
              "Bugcrowd-Version": "2024-01-11",
              "Authorization": "REPLACE_KEY_VALUE"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.end();
      - label: Ruby + Native
        lang: ruby_native
        source: |-
          require 'uri'
          require 'net/http'
          require 'openssl'

          url = URI("https://api.bugcrowd.com/submissions?fields%5Bactivity%5D=SOME_ARRAY_VALUE&fields%5Bclaim_ticket%5D=SOME_ARRAY_VALUE&fields%5Bcomment%5D=SOME_ARRAY_VALUE&fields%5Bcvss_vector%5D=SOME_ARRAY_VALUE&fields%5Bexternal_issue%5D=SOME_ARRAY_VALUE&fields%5Bfile_attachment%5D=SOME_ARRAY_VALUE&fields%5Bidentity%5D=SOME_ARRAY_VALUE&fields%5Bmonetary_reward%5D=SOME_ARRAY_VALUE&fields%5Borganization%5D=SOME_ARRAY_VALUE&fields%5Bpayment%5D=SOME_ARRAY_VALUE&fields%5Bprogram%5D=SOME_ARRAY_VALUE&fields%5Bprogram_brief%5D=SOME_ARRAY_VALUE&fields%5Bsubmission%5D=SOME_ARRAY_VALUE&fields%5Btarget%5D=SOME_ARRAY_VALUE&fields%5Btarget_group%5D=SOME_ARRAY_VALUE&page%5Blimit%5D=SOME_INTEGER_VALUE&page%5Boffset%5D=SOME_INTEGER_VALUE&include=SOME_ARRAY_VALUE&filter%5Bassignee%5D=SOME_ARRAY_VALUE&filter%5Bblocked_by%5D=SOME_ARRAY_VALUE&filter%5Bduplicate%5D=SOME_BOOLEAN_VALUE&filter%5Bpayments%5D=SOME_ARRAY_VALUE&filter%5Bpoints%5D=SOME_ARRAY_VALUE&filter%5Bprogram%5D=SOME_ARRAY_VALUE&filter%5Bresearcher%5D=SOME_ARRAY_VALUE&filter%5Bretest%5D=SOME_ARRAY_VALUE&filter%5Bsearch%5D=SOME_STRING_VALUE&filter%5Bseverity%5D=SOME_ARRAY_VALUE&filter%5Bsource%5D=SOME_ARRAY_VALUE&filter%5Bstate%5D=SOME_ARRAY_VALUE&filter%5Bsubmitted%5D=SOME_STRING_VALUE&filter%5Btarget%5D=SOME_ARRAY_VALUE&filter%5Btarget_type%5D=SOME_ARRAY_VALUE&filter%5Bupdated%5D=SOME_STRING_VALUE&filter%5Bvrt%5D=cross_site_scripting_xss&sort=SOME_ARRAY_VALUE")

          http = Net::HTTP.new(url.host, url.port)
          http.use_ssl = true
          http.verify_mode = OpenSSL::SSL::VERIFY_NONE

          request = Net::HTTP::Get.new(url)
          request["Bugcrowd-Version"] = '2024-01-11'
          request["Authorization"] = 'REPLACE_KEY_VALUE'

          response = http.request(request)
          puts response.read_body
      - label: Python + Python3
        lang: python_python3
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.bugcrowd.com")

          headers = {
              'Bugcrowd-Version': "2024-01-11",
              'Authorization': "REPLACE_KEY_VALUE"
              }

          conn.request("GET", "/submissions?fields%5Bactivity%5D=SOME_ARRAY_VALUE&fields%5Bclaim_ticket%5D=SOME_ARRAY_VALUE&fields%5Bcomment%5D=SOME_ARRAY_VALUE&fields%5Bcvss_vector%5D=SOME_ARRAY_VALUE&fields%5Bexternal_issue%5D=SOME_ARRAY_VALUE&fields%5Bfile_attachment%5D=SOME_ARRAY_VALUE&fields%5Bidentity%5D=SOME_ARRAY_VALUE&fields%5Bmonetary_reward%5D=SOME_ARRAY_VALUE&fields%5Borganization%5D=SOME_ARRAY_VALUE&fields%5Bpayment%5D=SOME_ARRAY_VALUE&fields%5Bprogram%5D=SOME_ARRAY_VALUE&fields%5Bprogram_brief%5D=SOME_ARRAY_VALUE&fields%5Bsubmission%5D=SOME_ARRAY_VALUE&fields%5Btarget%5D=SOME_ARRAY_VALUE&fields%5Btarget_group%5D=SOME_ARRAY_VALUE&page%5Blimit%5D=SOME_INTEGER_VALUE&page%5Boffset%5D=SOME_INTEGER_VALUE&include=SOME_ARRAY_VALUE&filter%5Bassignee%5D=SOME_ARRAY_VALUE&filter%5Bblocked_by%5D=SOME_ARRAY_VALUE&filter%5Bduplicate%5D=SOME_BOOLEAN_VALUE&filter%5Bpayments%5D=SOME_ARRAY_VALUE&filter%5Bpoints%5D=SOME_ARRAY_VALUE&filter%5Bprogram%5D=SOME_ARRAY_VALUE&filter%5Bresearcher%5D=SOME_ARRAY_VALUE&filter%5Bretest%5D=SOME_ARRAY_VALUE&filter%5Bsearch%5D=SOME_STRING_VALUE&filter%5Bseverity%5D=SOME_ARRAY_VALUE&filter%5Bsource%5D=SOME_ARRAY_VALUE&filter%5Bstate%5D=SOME_ARRAY_VALUE&filter%5Bsubmitted%5D=SOME_STRING_VALUE&filter%5Btarget%5D=SOME_ARRAY_VALUE&filter%5Btarget_type%5D=SOME_ARRAY_VALUE&filter%5Bupdated%5D=SOME_STRING_VALUE&filter%5Bvrt%5D=cross_site_scripting_xss&sort=SOME_ARRAY_VALUE", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
    post:
      summary: Create submission
      operationId: createSubmission
      tags:
      - Submissions API
      - submission_resource
      description: Create a submission within a program.
      requestBody:
        description: A submission resource with a program relationship and an optional
          target relationship.
        required: true
        content:
          application/vnd.bugcrowd.v4+json:
            schema:
              "$ref": "#/components/schemas/CreateSubmissionRequest"
            examples:
              ValidExample:
                value:
                  data:
                    type: submission
                    attributes:
                      title: This is a good title
                      description: This contains a POC
                    relationships:
                      program:
                        data:
                          type: program
                          id:
                            "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
              InvalidProvidedType:
                value:
                  data:
                    type: invalid_type
              ClientGeneratedID:
                value:
                  data:
                    type: submission
                    id:
                      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
              InvalidAttribute:
                value:
                  data:
                    type: submission
                    attributes:
                      invalid_attribute: value
              InvalidAttributeType:
                value:
                  data:
                    type: submission
                    attributes:
                      title: This is a good title
                      description: This contains a POC
                      severity: '3'
                    relationships:
                      program:
                        data:
                          type: program
                          id:
                            "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
              InvalidAttributeValue:
                value:
                  data:
                    type: submission
                    attributes:
                      state: invalid_state
              InvalidProgram:
                value:
                  data:
                    type: submission
                    attributes:
                      title: title
                    relationships:
                      program:
                        data:
                          id: invalid_uuid
                          type: program
              InvalidVrtId:
                value:
                  data:
                    type: submission
                    attributes:
                      title: good title
                      description: clear description
                      vrt_id: invalid_vrt.does_not_exist
                    relationships:
                      program:
                        data:
                          id:
                            "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                          type: program
              InvalidTarget:
                value:
                  data:
                    type: submission
                    relationships:
                      target:
                        data:
                          id: invalid_uuid
                          type: target
      responses:
        '201':
          description: Submission created
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": "#/components/schemas/CreateSubmissionResponse"
              examples:
                ValidExample:
                  value:
                    data:
                      id:
                        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                      type: submission
                      attributes:
                        bug_url:
                        custom_fields:
                          custom_field_label:
                        description: This contains a POC
                        duplicate: false
                        extra_info:
                        http_request:
                        remediation_advice:
                        researcher_email:
                        source: api
                        submitted_at: '2018-11-13T20:20:39.000Z'
                        title: This is a good title
                        vrt_id: other
                        vrt_version: '1.8'
                        vulnerability_references:
                        severity:
                        state: unresolved
                      relationships:
                        program:
                          data:
                            id:
                              "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                            type: program
                          links:
                            related:
                              href: "/programs/10000000-0000-0000-0000-000000000000"
                        cvss_vector:
                          data:
                            id:
                              "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                            type: cvss_vector
                          links:
                            related:
                              href: "(NOT IMPLEMENTED YET)"
                        duplicates:
                          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/EmptyManyRelationship
                        researcher:
                          data:
                            id:
                              "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                            type: identity
                          links:
                            related:
                              href: "(NOT IMPLEMENTED YET)"
                        claim_ticket:
                          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/EmptySingleRelationship
                        assignee:
                          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/EmptySingleRelationship
                        activities:
                          data:
                          - id:
                              "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                            type: activity
                          links:
                            related:
                              href: "(NOT IMPLEMENTED YET)"
                              meta:
                                count: 1
                                total_hits: 1
                        comments:
                          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/EmptyManyRelationship
                        monetary_rewards:
                          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/EmptyManyRelationship
                        file_attachments:
                          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/EmptyManyRelationship
                        target:
                          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/EmptySingleRelationship
                      links:
                        self: "/submissions/10000000-0000-0000-0000-000000000000"
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
        '400':
          description: Bad request
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
              examples:
                InvalidAttribute:
                  value:
                    errors:
                    - title: Bad Request
                      status: '400'
                      detail: The property '#/data/attributes' contains additional
                        properties ['invalid_attribute'] outside of the schema when
                        none are allowed.
                      source:
                        pointer: "/data/attributes"
                InvalidAttributeType:
                  value:
                    errors:
                    - title: Bad Request
                      status: '400'
                      detail: 'The property ''#/data/attributes/severity'' of type
                        string did not match one or more of the following types: integer,
                        null.'
                      source:
                        pointer: "/data/attributes/severity"
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
        '403':
          description: Forbidden client-generated ID
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
              examples:
                ClientGeneratedID:
                  value:
                    errors:
                    - title: Forbidden
                      status: '403'
                      detail: Unsupported client-generated ID.
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
        '404':
          description: An error indicating missing resource.
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
              examples:
                InvalidProgram:
                  value:
                    errors:
                      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/NotFoundError
                InvalidTarget:
                  value:
                    errors:
                      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/NotFoundError
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
        '409':
          description: Incorrect data type parameter
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
              examples:
                InvalidProvidedType:
                  value:
                    errors:
                    - title: Conflict
                      status: '409'
                      detail: 'Provided type: invalid_type is not supported by this
                        endpoint.'
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
        '422':
          description: Required attributes were not provided.
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
              examples:
                InvalidVrtId:
                  value:
                    errors:
                    - title: Unprocessable Entity
                      status: '422'
                      detail: VRT is not a valid option.
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
      x-codeSamples:
      - label: Shell + Curl
        lang: shell_curl
        source: |-
          curl --request POST \
            --url https://api.bugcrowd.com/submissions \
            --header 'Authorization: REPLACE_KEY_VALUE'
      - label: Node + Native
        lang: node_native
        source: |-
          const http = require("https");

          const options = {
            "method": "POST",
            "hostname": "api.bugcrowd.com",
            "port": null,
            "path": "/submissions",
            "headers": {
              "Authorization": "REPLACE_KEY_VALUE"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.end();
      - label: Ruby + Native
        lang: ruby_native
        source: |-
          require 'uri'
          require 'net/http'
          require 'openssl'

          url = URI("https://api.bugcrowd.com/submissions")

          http = Net::HTTP.new(url.host, url.port)
          http.use_ssl = true
          http.verify_mode = OpenSSL::SSL::VERIFY_NONE

          request = Net::HTTP::Post.new(url)
          request["Authorization"] = 'REPLACE_KEY_VALUE'

          response = http.request(request)
          puts response.read_body
      - label: Python + Python3
        lang: python_python3
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.bugcrowd.com")

          headers = { 'Authorization': "REPLACE_KEY_VALUE" }

          conn.request("POST", "/submissions", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
  "/claim_tickets":
    post:
      summary: Create claim ticket
      operationId: createClaimTicket
      tags:
      - Submissions API
      - claim_ticket_resource
      description: Create claim ticket with submission relationship.
      requestBody:
        required: true
        content:
          application/vnd.bugcrowd.v4+json:
            schema:
              "$ref": "#/components/schemas/CreateClaimTicketRequest"
            examples:
              ValidExample:
                value:
                  data:
                    type: claim_ticket
                    relationships:
                      submissions:
                        data:
                        - type: submission
                          id:
                            "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
              InvalidProvidedType:
                value:
                  data:
                    type: invalid_type
              ClientGeneratedID:
                value:
                  data:
                    type: claim_ticket
                    id: 1234-abc
              InvalidSubmission:
                value:
                  data:
                    type: claim_ticket
                    relationships:
                      submissions:
                        data:
                        - id: invalid_uuid
                          type: submission
              InvalidSubmissionRelationship:
                value:
                  data:
                    type: claim_ticket
                    relationships:
                      submission:
                        data:
                        - type: submission
                          id:
                            "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
              MoreThanOneSubmission:
                value:
                  data:
                    type: claim_ticket
                    relationships:
                      submissions:
                        data:
                        - type: submission
                          id:
                            "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                        - type: submission
                          id:
                            "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
      responses:
        '201':
          description: Claim ticket created
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": "#/components/schemas/CreateClaimTicketResponse"
              examples:
                ValidExample:
                  value:
                    data:
                      id:
                        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                      type: claim_ticket
                      attributes:
                        claimed_at:
                        expires_at: '2018-11-13T20:20:39.000Z'
                        status: pending
                        token: A10000000000000
                        claim_url: http://bugportal.test/claim_tickets/issues?claim_token=A10000000000000
                      relationships:
                        submissions:
                          data:
                          - type: submission
                            id:
                              "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                          links:
                            related:
                              href: "(NOT IMPLEMENTED YET)"
                              meta:
                                count: 1
                                total_hits: 1
                      links:
                        self: "(NOT IMPLEMENTED YET)"
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
        '400':
          description: Bad request
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
              examples:
                InvalidSubmissionRelationship:
                  value:
                    errors:
                    - title: Bad Request
                      status: '400'
                      detail: The property '#/data/relationships' contains additional
                        properties ['submission'] outside of the schema when none
                        are allowed.
                      source:
                        pointer: "/data/relationships"
                MoreThanOneSubmission:
                  value:
                    errors:
                    - title: Bad Request
                      status: '400'
                      detail: The property '#/data/relationships/submissions/data'
                        had more items than the allowed 1.
                      source:
                        pointer: "/data/relationships/submissions/data"
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
        '403':
          description: Forbidden client-generated ID
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
              examples:
                ClientGeneratedID:
                  value:
                    errors:
                    - title: Forbidden
                      status: '403'
                      detail: Unsupported client-generated ID.
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
        '404':
          description: An error indicating missing resource.
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
              examples:
                InvalidSubmission:
                  value:
                    errors:
                      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/NotFoundError
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
        '409':
          description: Incorrect data type parameter
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
              examples:
                InvalidProvidedType:
                  value:
                    errors:
                    - title: Conflict
                      status: '409'
                      detail: 'Provided type: invalid_type is not supported by this
                        endpoint.'
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
      x-codeSamples:
      - label: Shell + Curl
        lang: shell_curl
        source: |-
          curl --request POST \
            --url https://api.bugcrowd.com/claim_tickets \
            --header 'Authorization: REPLACE_KEY_VALUE'
      - label: Node + Native
        lang: node_native
        source: |-
          const http = require("https");

          const options = {
            "method": "POST",
            "hostname": "api.bugcrowd.com",
            "port": null,
            "path": "/claim_tickets",
            "headers": {
              "Authorization": "REPLACE_KEY_VALUE"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.end();
      - label: Ruby + Native
        lang: ruby_native
        source: |-
          require 'uri'
          require 'net/http'
          require 'openssl'

          url = URI("https://api.bugcrowd.com/claim_tickets")

          http = Net::HTTP.new(url.host, url.port)
          http.use_ssl = true
          http.verify_mode = OpenSSL::SSL::VERIFY_NONE

          request = Net::HTTP::Post.new(url)
          request["Authorization"] = 'REPLACE_KEY_VALUE'

          response = http.request(request)
          puts response.read_body
      - label: Python + Python3
        lang: python_python3
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.bugcrowd.com")

          headers = { 'Authorization': "REPLACE_KEY_VALUE" }

          conn.request("POST", "/claim_tickets", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
  "/targets":
    get:
      summary: Index targets
      operationId: listTargets
      tags:
      - Submissions API
      - target_resource
      description: Returns a list of targets belonging to the organizations of the
        user.
      parameters:
      - "$ref": "#/components/parameters/BugcrowdVersionParameter"
      - "$ref": "#/components/parameters/OrganizationFieldsParameter"
      - "$ref": "#/components/parameters/TargetFieldsParameter"
      - "$ref": "#/components/parameters/PageLimitParameter"
      - "$ref": "#/components/parameters/PageOffsetParameter"
      - "$ref": "#/components/parameters/OrganizationIDFilterParameter"
      - "$ref": "#/components/parameters/TargetIncludeParameter"
      - name: filter[target_group_id]
        description: Filter targets by the group they belong to (Used to paginate
          targets on a program)
        in: query
        required: false
        explode: false
        schema:
          type: array
          maxItems: 20
          uniqueItems: true
          items:
            "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/UUIDSchema
        examples:
          InvalidParamType:
            value: 5
      responses:
        '200':
          description: A JSON object with a `data` property containing an array of
            target objects.
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": "#/components/schemas/ListTargetsResponse"
              examples:
                ValidExample:
                  value:
                    data:
                    - id:
                        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                      type: target
                      attributes:
                        name: test.io
                        category: website
                      relationships: {}
                    included:
                    - id:
                        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                      type: organization
                      attributes:
                        name: name
                      relationships:
                        programs:
                          data:
                          - id:
                              "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                            type: program
                          links:
                            related:
                              href: "/programs?filter[organization_id]=10000000-0000-0000-0000-000000000000"
                              meta:
                                count: 1
                                total_hits: 1
                      links:
                        self: "/organizations/10000000-0000-0000-0000-000000000000"
                    meta:
                      total_hits: 1
                      count: 1
                    links:
                      self: "/targets?fields[organization]=name,programs&fields[target]=name,category&filter[organization_id]=10000000-0000-0000-0000-000000000000&include=organization&page[limit]=50&page[offset]=0"
                      next: "/targets?fields[organization]=name,programs&fields[target]=name,category&filter[organization_id]=10000000-0000-0000-0000-000000000000&include=organization&page[limit]=50&page[offset]=50"
                      previous: "/targets?fields[organization]=name,programs&fields[target]=name,category&filter[organization_id]=10000000-0000-0000-0000-000000000000&include=organization&page[limit]=50&page[offset]=0"
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
        '400':
          description: An error object indicating unsupported request parameters.
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
              examples:
                BeyondMaximumOffset:
                  value:
                    errors:
                    - title: Bad Request
                      status: '400'
                      detail: The property '#/page/offset' did not have a maximum
                        value of 9900, inclusively.
                      source:
                        pointer: "/page/offset"
                InvalidParamValue:
                  value:
                    errors:
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/OrganizationFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/TargetFieldsEnumBadRequest
                    - title: Bad Request
                      status: '400'
                      detail: The property '#/page/limit' did not have a maximum value
                        of 100, inclusively.
                      source:
                        pointer: "/page/limit"
                    - title: Bad Request
                      status: '400'
                      detail: The property '#/page/offset' did not have a minimum
                        value of 0, inclusively.
                      source:
                        pointer: "/page/offset"
                    - title: Bad Request
                      status: '400'
                      detail: 'The property ''#/include/0'' value ''invalid_resource''
                        did not match one of the following values: organization.'
                      source:
                        pointer: "/include/0"
                InvalidParamType:
                  value:
                    errors:
                    - title: Bad Request
                      status: '400'
                      detail: 'The property ''#/page/offset'' of type string did not
                        match the following type: integer.'
                      source:
                        pointer: "/page/offset"
                    - title: Bad Request
                      status: '400'
                      detail: 'The property ''#/filter/target_group_id/0'' of type
                        integer did not match the following type: string.'
                      source:
                        pointer: "/filter/target_group_id/0"
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
        '404':
          description: An error indicating missing resource.
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
              example:
                errors:
                  "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/NotFoundError
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
      x-codeSamples:
      - label: Shell + Curl
        lang: shell_curl
        source: |-
          curl --request GET \
            --url 'https://api.bugcrowd.com/targets?fields%5Borganization%5D=SOME_ARRAY_VALUE&fields%5Btarget%5D=SOME_ARRAY_VALUE&page%5Blimit%5D=SOME_INTEGER_VALUE&page%5Boffset%5D=SOME_INTEGER_VALUE&filter%5Borganization_id%5D=SOME_ARRAY_VALUE&include=SOME_ARRAY_VALUE&filter%5Btarget_group_id%5D=SOME_ARRAY_VALUE' \
            --header 'Authorization: REPLACE_KEY_VALUE' \
            --header 'Bugcrowd-Version: 2024-01-11'
      - label: Node + Native
        lang: node_native
        source: |-
          const http = require("https");

          const options = {
            "method": "GET",
            "hostname": "api.bugcrowd.com",
            "port": null,
            "path": "/targets?fields%5Borganization%5D=SOME_ARRAY_VALUE&fields%5Btarget%5D=SOME_ARRAY_VALUE&page%5Blimit%5D=SOME_INTEGER_VALUE&page%5Boffset%5D=SOME_INTEGER_VALUE&filter%5Borganization_id%5D=SOME_ARRAY_VALUE&include=SOME_ARRAY_VALUE&filter%5Btarget_group_id%5D=SOME_ARRAY_VALUE",
            "headers": {
              "Bugcrowd-Version": "2024-01-11",
              "Authorization": "REPLACE_KEY_VALUE"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.end();
      - label: Ruby + Native
        lang: ruby_native
        source: |-
          require 'uri'
          require 'net/http'
          require 'openssl'

          url = URI("https://api.bugcrowd.com/targets?fields%5Borganization%5D=SOME_ARRAY_VALUE&fields%5Btarget%5D=SOME_ARRAY_VALUE&page%5Blimit%5D=SOME_INTEGER_VALUE&page%5Boffset%5D=SOME_INTEGER_VALUE&filter%5Borganization_id%5D=SOME_ARRAY_VALUE&include=SOME_ARRAY_VALUE&filter%5Btarget_group_id%5D=SOME_ARRAY_VALUE")

          http = Net::HTTP.new(url.host, url.port)
          http.use_ssl = true
          http.verify_mode = OpenSSL::SSL::VERIFY_NONE

          request = Net::HTTP::Get.new(url)
          request["Bugcrowd-Version"] = '2024-01-11'
          request["Authorization"] = 'REPLACE_KEY_VALUE'

          response = http.request(request)
          puts response.read_body
      - label: Python + Python3
        lang: python_python3
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.bugcrowd.com")

          headers = {
              'Bugcrowd-Version': "2024-01-11",
              'Authorization': "REPLACE_KEY_VALUE"
              }

          conn.request("GET", "/targets?fields%5Borganization%5D=SOME_ARRAY_VALUE&fields%5Btarget%5D=SOME_ARRAY_VALUE&page%5Blimit%5D=SOME_INTEGER_VALUE&page%5Boffset%5D=SOME_INTEGER_VALUE&filter%5Borganization_id%5D=SOME_ARRAY_VALUE&include=SOME_ARRAY_VALUE&filter%5Btarget_group_id%5D=SOME_ARRAY_VALUE", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
  "/monetary_rewards/{id}":
    get:
      summary: Fetch reward
      operationId: getMonetaryReward
      tags:
      - Submissions API
      - monetary_reward_resource
      description: Returns a single monetary reward by UUID.
      parameters:
      - "$ref": "#/components/parameters/BugcrowdVersionParameter"
      - "$ref": "#/components/parameters/IDParameter"
      - "$ref": "#/components/parameters/IdentityFieldsParameter"
      - "$ref": "#/components/parameters/MonetaryRewardFieldsParameter"
      - "$ref": "#/components/parameters/PaymentFieldsParameter"
      - "$ref": "#/components/parameters/SubmissionFieldsParameter"
      - "$ref": "#/components/parameters/MonetaryRewardIncludeParameter"
      responses:
        '200':
          description: A JSON object with a `data` property containing a monetary_reward
            object.
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": "#/components/schemas/GetMonetaryRewardResponse"
              examples:
                ValidExample:
                  value:
                    data:
                      id:
                        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                      type: monetary_reward
                      attributes:
                        formatted_amount: "$100"
                        cancelled_at:
                      relationships: {}
                      links:
                        self: "/monetary_rewards/10000000-0000-0000-0000-000000000000"
                    included:
                    - id:
                        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                      type: identity
                      attributes:
                        name: Tiara
                        email: tiara@sanchez.info
                      links:
                        self: "(NOT IMPLEMENTED YET)"
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
        '400':
          description: An error object indicating unsupported request parameters.
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
              examples:
                InvalidParamValue:
                  value:
                    errors:
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/IdentityFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/MonetaryRewardFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/PaymentFieldsEnumBadRequest
                    - "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/error_helpers/SubmissionFieldsEnumBadRequest
                    - title: Bad Request
                      status: '400'
                      source:
                        pointer: "/include/0"
                      detail: 'The property ''#/include/0'' value ''invalid_resource''
                        did not match one of the following values: submission, rewarded_by,
                        payments.'
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
        '404':
          description: An error indicating missing resource.
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
              examples:
                InvalidUrlId:
                  value:
                    errors:
                      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/NotFoundError
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
      x-codeSamples:
      - label: Shell + Curl
        lang: shell_curl
        source: |-
          curl --request GET \
            --url 'https://api.bugcrowd.com/monetary_rewards/%7Bid%7D?fields%5Bidentity%5D=SOME_ARRAY_VALUE&fields%5Bmonetary_reward%5D=SOME_ARRAY_VALUE&fields%5Bpayment%5D=SOME_ARRAY_VALUE&fields%5Bsubmission%5D=SOME_ARRAY_VALUE&include=SOME_ARRAY_VALUE' \
            --header 'Authorization: REPLACE_KEY_VALUE' \
            --header 'Bugcrowd-Version: 2024-01-11'
      - label: Node + Native
        lang: node_native
        source: |-
          const http = require("https");

          const options = {
            "method": "GET",
            "hostname": "api.bugcrowd.com",
            "port": null,
            "path": "/monetary_rewards/%7Bid%7D?fields%5Bidentity%5D=SOME_ARRAY_VALUE&fields%5Bmonetary_reward%5D=SOME_ARRAY_VALUE&fields%5Bpayment%5D=SOME_ARRAY_VALUE&fields%5Bsubmission%5D=SOME_ARRAY_VALUE&include=SOME_ARRAY_VALUE",
            "headers": {
              "Bugcrowd-Version": "2024-01-11",
              "Authorization": "REPLACE_KEY_VALUE"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.end();
      - label: Ruby + Native
        lang: ruby_native
        source: |-
          require 'uri'
          require 'net/http'
          require 'openssl'

          url = URI("https://api.bugcrowd.com/monetary_rewards/%7Bid%7D?fields%5Bidentity%5D=SOME_ARRAY_VALUE&fields%5Bmonetary_reward%5D=SOME_ARRAY_VALUE&fields%5Bpayment%5D=SOME_ARRAY_VALUE&fields%5Bsubmission%5D=SOME_ARRAY_VALUE&include=SOME_ARRAY_VALUE")

          http = Net::HTTP.new(url.host, url.port)
          http.use_ssl = true
          http.verify_mode = OpenSSL::SSL::VERIFY_NONE

          request = Net::HTTP::Get.new(url)
          request["Bugcrowd-Version"] = '2024-01-11'
          request["Authorization"] = 'REPLACE_KEY_VALUE'

          response = http.request(request)
          puts response.read_body
      - label: Python + Python3
        lang: python_python3
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.bugcrowd.com")

          headers = {
              'Bugcrowd-Version': "2024-01-11",
              'Authorization': "REPLACE_KEY_VALUE"
              }

          conn.request("GET", "/monetary_rewards/%7Bid%7D?fields%5Bidentity%5D=SOME_ARRAY_VALUE&fields%5Bmonetary_reward%5D=SOME_ARRAY_VALUE&fields%5Bpayment%5D=SOME_ARRAY_VALUE&fields%5Bsubmission%5D=SOME_ARRAY_VALUE&include=SOME_ARRAY_VALUE", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
    patch:
      summary: Update reward
      operationId: updateMonetaryReward
      tags:
      - Submissions API
      - monetary_reward_resource
      description: Cancel a monetary reward and provide a reason
      parameters:
      - "$ref": "#/components/parameters/BugcrowdVersionParameter"
      - "$ref": "#/components/parameters/IDParameter"
      requestBody:
        description: Update reward
        required: true
        content:
          application/vnd.bugcrowd.v4+json:
            schema:
              "$ref": "#/components/schemas/UpdateMonetaryRewardRequest"
            examples:
              ValidExample:
                value:
                  data:
                    type: monetary_reward
                    attributes:
                      cancelled: true
                      cancellation_reason: other
              InvalidCancellationReason:
                value:
                  data:
                    type: monetary_reward
                    attributes:
                      cancelled: true
                      cancellation_reason: invalid
              InvalidUncanceling:
                value:
                  data:
                    type: monetary_reward
                    attributes:
                      cancelled: false
                      cancellation_reason: amount_incorrect
      responses:
        '200':
          description: Monetary reward updated
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": "#/components/schemas/UpdateMonetaryRewardResponse"
              examples:
                ValidExample:
                  value:
                    data:
                      id:
                        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                      type: monetary_reward
                      attributes:
                        amount_cents: 10000
                        cancellation_comment:
                        cancellation_reason: other
                        cancelled_at: '2018-11-13T20:20:39.000Z'
                        comment:
                        created_at: '2018-11-13T20:20:39.000Z'
                        reason: Bugcrowd University
                        rewarded_at: '2018-11-13T20:20:39.000Z'
                        formatted_amount: "$100"
                        cancelled: true
                      relationships:
                        submission:
                          data:
                            id:
                              "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                            type: submission
                          links:
                            related:
                              href: "/submissions/10000000-0000-0000-0000-000000000000"
                        rewarded_by:
                          data:
                            id:
                              "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                            type: identity
                          links:
                            related:
                              href: "(NOT IMPLEMENTED YET)"
                        cancelled_by:
                          data:
                            id:
                              "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                            type: identity
                          links:
                            related:
                              href: "(NOT IMPLEMENTED YET)"
                        payments:
                          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/EmptyManyRelationship
                      links:
                        self: "/monetary_rewards/10000000-0000-0000-0000-000000000000"
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
        '400':
          description: An error in the request body
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
              examples:
                InvalidCancellationReason:
                  value:
                    errors:
                    - title: Bad Request
                      status: '400'
                      source:
                        pointer: "/data/attributes/cancellation_reason"
                      detail: 'The property ''#/data/attributes/cancellation_reason''
                        value ''invalid'' did not match one of the following values:
                        amount_incorrect, bounty_incorrect, expired, handled_outside_platform,
                        other, researcher_incorrect.'
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
        '404':
          description: An error indicating missing resource.
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
              examples:
                InvalidUrlId:
                  value:
                    errors:
                      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/NotFoundError
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
        '422':
          description: Invalid attribute options
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
              examples:
                InvalidUncanceling:
                  value:
                    errors:
                    - title: Unprocessable Entity
                      status: '422'
                      detail: Monetary reward can only be cancelled.
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
      x-codeSamples:
      - label: Shell + Curl
        lang: shell_curl
        source: |-
          curl --request PATCH \
            --url https://api.bugcrowd.com/monetary_rewards/%7Bid%7D \
            --header 'Authorization: REPLACE_KEY_VALUE' \
            --header 'Bugcrowd-Version: 2024-01-11'
      - label: Node + Native
        lang: node_native
        source: |-
          const http = require("https");

          const options = {
            "method": "PATCH",
            "hostname": "api.bugcrowd.com",
            "port": null,
            "path": "/monetary_rewards/%7Bid%7D",
            "headers": {
              "Bugcrowd-Version": "2024-01-11",
              "Authorization": "REPLACE_KEY_VALUE"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.end();
      - label: Ruby + Native
        lang: ruby_native
        source: |-
          require 'uri'
          require 'net/http'
          require 'openssl'

          url = URI("https://api.bugcrowd.com/monetary_rewards/%7Bid%7D")

          http = Net::HTTP.new(url.host, url.port)
          http.use_ssl = true
          http.verify_mode = OpenSSL::SSL::VERIFY_NONE

          request = Net::HTTP::Patch.new(url)
          request["Bugcrowd-Version"] = '2024-01-11'
          request["Authorization"] = 'REPLACE_KEY_VALUE'

          response = http.request(request)
          puts response.read_body
      - label: Python + Python3
        lang: python_python3
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.bugcrowd.com")

          headers = {
              'Bugcrowd-Version': "2024-01-11",
              'Authorization': "REPLACE_KEY_VALUE"
              }

          conn.request("PATCH", "/monetary_rewards/%7Bid%7D", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
  "/monetary_rewards":
    post:
      summary: Create reward
      operationId: createMonetaryReward
      tags:
      - Submissions API
      - monetary_reward_resource
      description: Create a new monetary reward for a submission.
      requestBody:
        description: A monetary reward resource with a submission relationship.
        required: true
        content:
          application/vnd.bugcrowd.v4+json:
            schema:
              "$ref": "#/components/schemas/CreateMonetaryRewardRequest"
            examples:
              ValidExample:
                value:
                  data:
                    type: monetary_reward
                    attributes:
                      amount_cents: 1000
                    relationships:
                      submission:
                        data:
                          type: submission
                          id:
                            "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
              InvalidProvidedType:
                value:
                  data:
                    type: invalid_type
              ClientGeneratedID:
                value:
                  data:
                    type: monetary_reward
                    id: 1234-abc
              NoAmountProvided:
                value:
                  data:
                    type: monetary_reward
                    attributes:
                      amount_cents:
              InvalidAttribute:
                value:
                  data:
                    type: monetary_reward
                    attributes:
                      invalid_attribute: 55
              InvalidSubmission:
                value:
                  data:
                    type: monetary_reward
                    relationships:
                      submission:
                        data:
                          id: invalid_uuid
                          type: submission
              UnrewardableSubmission:
                value:
                  data:
                    type: monetary_reward
                    attributes:
                      amount_cents: 1000
                    relationships:
                      submission:
                        data:
                          id: 10000000-0000-0000-0000-000000000001
                          type: submission
              AmountExceedingPrizePool:
                value:
                  data:
                    type: monetary_reward
                    attributes:
                      amount_cents: 999999900
                    relationships:
                      submission:
                        data:
                          id: 10000000-0000-0000-0000-000000000000
                          type: submission
      responses:
        '201':
          description: Monetary reward created
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": "#/components/schemas/CreateMonetaryRewardResponse"
              examples:
                ValidExample:
                  value:
                    data:
                      id:
                        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                      type: monetary_reward
                      attributes:
                        amount_cents: 1000
                        cancellation_comment:
                        cancellation_reason:
                        cancelled_at:
                        comment:
                        created_at: '2018-11-13T20:20:39.000Z'
                        reason: tip
                        rewarded_at: '2018-11-13T20:20:39.000Z'
                        formatted_amount: "$10"
                        cancelled: false
                      relationships:
                        submission:
                          data:
                            type: submission
                            id:
                              "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                          links:
                            related:
                              href: "/submissions/10000000-0000-0000-0000-000000000000"
                        rewarded_by:
                          data:
                            type: identity
                            id:
                              "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                          links:
                            related:
                              href: "(NOT IMPLEMENTED YET)"
                        cancelled_by:
                          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/EmptySingleRelationship
                        payments:
                          data:
                          - type: payment
                            id:
                              "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                          links:
                            related:
                              href: "(NOT IMPLEMENTED YET)"
                              meta:
                                count: 1
                                total_hits: 1
                      links:
                        self: "/monetary_rewards/10000000-0000-0000-0000-000000000000"
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
        '400':
          description: Bad request
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
              examples:
                InvalidAttribute:
                  value:
                    errors:
                    - title: Bad Request
                      status: '400'
                      detail: The property '#/data/attributes' contains additional
                        properties ['invalid_attribute'] outside of the schema when
                        none are allowed.
                      source:
                        pointer: "/data/attributes"
                NoAmountProvided:
                  value:
                    errors:
                    - title: Bad Request
                      status: '400'
                      detail: 'The property ''#/data/attributes/amount_cents'' of
                        type null did not match the following type: integer.'
                      source:
                        pointer: "/data/attributes/amount_cents"
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
        '403':
          description: Forbidden client-generated ID
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
              examples:
                ClientGeneratedID:
                  value:
                    errors:
                    - title: Forbidden
                      status: '403'
                      detail: Unsupported client-generated ID.
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
        '404':
          description: An error indicating missing resource.
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
              examples:
                InvalidSubmission:
                  value:
                    errors:
                    - title: Not Found
                      status: '404'
                      detail: The requested resource could not be found.
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
        '409':
          description: Incorrect data type parameter
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
              examples:
                InvalidProvidedType:
                  value:
                    errors:
                    - title: Conflict
                      status: '409'
                      detail: 'Provided type: invalid_type is not supported by this
                        endpoint.'
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
        '422':
          description: Record failed to validate, operation rolled back
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
              examples:
                AmountExceedingPrizePool:
                  value:
                    errors:
                    - title: Unprocessable Entity
                      status: '422'
                      detail: 'Unable to save: Reward due to Amount There is not enough
                        money remaining in the bounty prize pool - Please transfer
                        additional funds through the Accounting tab.'
                UnrewardableSubmission:
                  value:
                    errors:
                    - title: Unprocessable Entity
                      status: '422'
                      detail: Researcher email must be present to reward a submission.
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
      x-codeSamples:
      - label: Shell + Curl
        lang: shell_curl
        source: |-
          curl --request POST \
            --url https://api.bugcrowd.com/monetary_rewards \
            --header 'Authorization: REPLACE_KEY_VALUE'
      - label: Node + Native
        lang: node_native
        source: |-
          const http = require("https");

          const options = {
            "method": "POST",
            "hostname": "api.bugcrowd.com",
            "port": null,
            "path": "/monetary_rewards",
            "headers": {
              "Authorization": "REPLACE_KEY_VALUE"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.end();
      - label: Ruby + Native
        lang: ruby_native
        source: |-
          require 'uri'
          require 'net/http'
          require 'openssl'

          url = URI("https://api.bugcrowd.com/monetary_rewards")

          http = Net::HTTP.new(url.host, url.port)
          http.use_ssl = true
          http.verify_mode = OpenSSL::SSL::VERIFY_NONE

          request = Net::HTTP::Post.new(url)
          request["Authorization"] = 'REPLACE_KEY_VALUE'

          response = http.request(request)
          puts response.read_body
      - label: Python + Python3
        lang: python_python3
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.bugcrowd.com")

          headers = { 'Authorization': "REPLACE_KEY_VALUE" }

          conn.request("POST", "/monetary_rewards", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
  "/comments":
    post:
      summary: Create a comment
      operationId: createComment
      tags:
      - Submissions API
      - comment_resource
      description: Create a comment on a submission
      requestBody:
        required: true
        content:
          application/vnd.bugcrowd.v4+json:
            schema:
              "$ref": "#/components/schemas/CreateCommentRequest"
            examples:
              ValidExample:
                value:
                  data:
                    type: comment
                    attributes:
                      body: comment body
                      visibility_scope: everyone
              MissingBody:
                value:
                  data:
                    type: comment
                    attributes:
                      body:
              InvalidSubmission:
                value:
                  data:
                    type: comment
                    relationships:
                      submission:
                        data:
                          id: invalid_uuid
                          type: submission
      responses:
        '201':
          description: Comment created
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": "#/components/schemas/CreateCommentResponse"
              examples:
                ValidExample:
                  value:
                    data:
                      id:
                        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                      type: comment
                      attributes:
                        body: comment body
                        visibility_scope: everyone
                        created_at: '2018-11-13T20:20:39.000Z'
                      relationships:
                        submission:
                          data:
                            type: submission
                            id:
                              "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
                      links:
                        self: "/comments/10000000-0000-0000-0000-000000000000 (NOT
                          IMPLEMENTED YET)"
        '400':
          description: Error indicating malformed request payload
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
              examples:
                MissingBody:
                  value:
                    errors:
                    - title: Bad Request
                      status: '400'
                      detail: 'The property ''#/data/attributes/body'' of type null
                        did not match the following type: string.'
                      source:
                        pointer: "/data/attributes/body"
        '404':
          description: An error indicating missing resource.
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
              examples:
                InvalidSubmission:
                  value:
                    errors:
                    - title: Not Found
                      status: '404'
                      detail: The requested resource could not be found.
          headers:
            X-Bugcrowd-Media-Type:
              "$ref": "#/components/headers/X-Bugcrowd-Media-Type"
            X-Bugcrowd-Version:
              "$ref": "#/components/headers/X-Bugcrowd-Version"
        '409':
          description: Incorrect data type parameter
          content:
            application/vnd.bugcrowd.v4+json:
              schema:
                "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ErrorContent
      x-codeSamples:
      - label: Shell + Curl
        lang: shell_curl
        source: |-
          curl --request POST \
            --url https://api.bugcrowd.com/comments \
            --header 'Authorization: REPLACE_KEY_VALUE'
      - label: Node + Native
        lang: node_native
        source: |-
          const http = require("https");

          const options = {
            "method": "POST",
            "hostname": "api.bugcrowd.com",
            "port": null,
            "path": "/comments",
            "headers": {
              "Authorization": "REPLACE_KEY_VALUE"
            }
          };

          const req = http.request(options, function (res) {
            const chunks = [];

            res.on("data", function (chunk) {
              chunks.push(chunk);
            });

            res.on("end", function () {
              const body = Buffer.concat(chunks);
              console.log(body.toString());
            });
          });

          req.end();
      - label: Ruby + Native
        lang: ruby_native
        source: |-
          require 'uri'
          require 'net/http'
          require 'openssl'

          url = URI("https://api.bugcrowd.com/comments")

          http = Net::HTTP.new(url.host, url.port)
          http.use_ssl = true
          http.verify_mode = OpenSSL::SSL::VERIFY_NONE

          request = Net::HTTP::Post.new(url)
          request["Authorization"] = 'REPLACE_KEY_VALUE'

          response = http.request(request)
          puts response.read_body
      - label: Python + Python3
        lang: python_python3
        source: |-
          import http.client

          conn = http.client.HTTPSConnection("api.bugcrowd.com")

          headers = { 'Authorization': "REPLACE_KEY_VALUE" }

          conn.request("POST", "/comments", headers=headers)

          res = conn.getresponse()
          data = res.read()

          print(data.decode("utf-8"))
x-webhooks:
  blockerCreated:
    post:
      tags:
      - blocker_webhooks
      security: []
      parameters:
      - "$ref": "#/components/parameters/WebhookSignatureParameter"
      requestBody:
        description: |
          Blocker created webhook - this request will be executed whenever a blocker is created on
          a submission

          For how to set up and use webhooks, [see here](https://docs.bugcrowd.com/api/webhooks/)
        content:
          application/json:
            schema:
              "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/WebhookBlockerCreatedRequest
      responses:
        '200':
          "$ref": "#/components/responses/WebhookReceivedResponse"
  blockerUpdated:
    post:
      tags:
      - blocker_webhooks
      security: []
      parameters:
      - "$ref": "#/components/parameters/WebhookSignatureParameter"
      requestBody:
        description: |
          Blocker updated webhook - this request will be executed when a blocker becomes "unblocked"

          For how to set up and use webhooks, [see here](https://docs.bugcrowd.com/api/webhooks/)
        content:
          application/json:
            schema:
              "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/WebhookBlockerUpdatedRequest
      responses:
        '200':
          "$ref": "#/components/responses/WebhookReceivedResponse"
  submissionCreated:
    post:
      tags:
      - submission_webhooks
      security: []
      parameters:
      - "$ref": "#/components/parameters/WebhookSignatureParameter"
      requestBody:
        description: |
          Submission created webhook - this request will be executed whenever a submission is created

          For how to set up and use webhooks, [see here](https://docs.bugcrowd.com/api/webhooks/)
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/WebhookSubmissionCreatedRequest"
      responses:
        '200':
          "$ref": "#/components/responses/WebhookReceivedResponse"
  submissionUpdated:
    post:
      tags:
      - submission_webhooks
      security: []
      parameters:
      - "$ref": "#/components/parameters/WebhookSignatureParameter"
      requestBody:
        description: |
          Submission updated webhook - this request will be executed when a submission is updated
          and will include which fields changed on the submission as:

          ```json
          { "field_name": { "from": "previous", "to": "new" } }
          ```

          For how to set up and use webhooks, [see here](https://docs.bugcrowd.com/api/webhooks/)
        content:
          application/json:
            schema:
              "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/WebhookSubmissionUpdatedRequest
      responses:
        '200':
          "$ref": "#/components/responses/WebhookReceivedResponse"
security:
- tokenAuth: []
components:
  headers:
    Bugcrowd-Version:
      description: The request header used to test new versions before updating the
        pinned account version
      schema:
        type: string
        example:
          "$ref": "#/info/version"
    X-Bugcrowd-Media-Type:
      description: The media type of the Bugcrowd API for the current request
      schema:
        type: string
        enum:
        - bugcrowd.v4; format=json
        example: bugcrowd.v4; format=json
    X-Bugcrowd-Version:
      description: The date-based version of the v4 API in the response
      schema:
        type: string
        example:
          "$ref": "#/info/version"
  schemas:
    AccessGrant:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/AccessGrant
    AccessInvitation:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/AccessInvitation
    ResourceRole:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/ResourceRole
    Activity:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/Activity
    CustomerAsset:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/CustomerAsset
    ClaimTicket:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/ClaimTicket
    Comment:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/Comment
    CreateCredentialBucketRequest:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/CreateCredentialBucketRequest
    UpdateCredentialBucketRequest:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/UpdateCredentialBucketRequest
    CredentialBucketResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/CredentialBucketResponse
    CreateAccessGrantRequest:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/CreateAccessGrantRequest
    CreateAccessGrantResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/CreateAccessGrantResponse
    CreateAccessInvitationRequest:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/CreateAccessInvitationRequest
    CreateAccessInvitationResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/CreateAccessInvitationResponse
    CreateCustomerAssetRequest:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/CreateCustomerAssetRequest
    CreateCustomerAssetResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/CreateCustomerAssetResponse
    CreateClaimTicketRequest:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/CreateClaimTicketRequest
    CreateClaimTicketResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/CreateClaimTicketResponse
    CreateIdentityRequest:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/CreateIdentityRequest
    CreateIdentityResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/CreateIdentityResponse
    CreateMonetaryRewardRequest:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/CreateMonetaryRewardRequest
    CreateMonetaryRewardResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/CreateMonetaryRewardResponse
    CreateOrganizationRequest:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/CreateOrganizationRequest
    CreateOrganizationResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/CreateOrganizationResponse
    CreateProgramRequest:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/CreateProgramRequest
    CreateCredentialRequest:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/CreateCredentialRequest
    CreateCredentialResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/CreateCredentialResponse
    UpdateCredentialResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/UpdateCredentialResponse
    CredentialAssignResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/CredentialAssignResponse
    AssignCredentialRequest:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/AssignCredentialRequest
    UpdateCredentialRequest:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/UpdateCredentialRequest
    CreateProgramResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/CreateProgramResponse
    CreateRewardRangeRequest:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/CreateRewardRangeRequest
    CreateRewardRangeResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/CreateRewardRangeResponse
    CreateSubmissionRequest:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/CreateSubmissionRequest
    CreateSubmissionResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/CreateSubmissionResponse
    CreateTargetRequest:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/CreateTargetRequest
    CreateTargetResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/CreateTargetResponse
    CreateTargetGroupRequest:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/CreateTargetGroupRequest
    CreateTargetGroupResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/CreateTargetGroupResponse
    CvssVector:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/CvssVector
    Event:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/Event
    ExternalIssue:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/ExternalIssue
    FileAttachment:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/FileAttachment
    GetExternalIssueResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/GetExternalIssueResponse
    GetMonetaryRewardResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/GetMonetaryRewardResponse
    GetOrganizationResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/GetOrganizationResponse
    GetProgramResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/GetProgramResponse
    GetCredentialResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/GetCredentialResponse
    GetProgramBriefResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/GetProgramBriefResponse
    GetSubmissionResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/GetSubmissionResponse
    GetCredentialBucketResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/GetCredentialBucketResponse
    GetScheduledCrowdMemberResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/GetScheduledCrowdMemberResponse
    Identity:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/Identity
    LinkExternalIssueRequest:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/LinkExternalIssueRequest
    LinkExternalIssueResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/LinkExternalIssueResponse
    ListAccessGrantsResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/ListAccessGrantsResponse
    ListAccessInvitationsResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/ListAccessInvitationsResponse
    ListExernalIssueResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/ListExternalIssueResponse
    ListOrganizationsResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/ListOrganizationsResponse
    ListProgramsResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/ListProgramsResponse
    ListSubmissionsResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/ListSubmissionsResponse
    ListCustomerAssetsResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/ListCustomerAssetsResponse
    ListTargetsResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/ListTargetsResponse
    MinimalIdentity:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/MinimalIdentity
    MonetaryReward:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/MonetaryReward
    Organization:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/Organization
    Payment:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/Payment
    Program:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/Program
    ProgramBrief:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/ProgramBrief
    RewardRange:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/RewardRange
    ListCredentialBucketResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/ListCredentialBucketResponse
    CredentialBucket:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/CredentialBucket
    ScheduledCrowdMember:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/ScheduledCrowdMember
    User:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/User
    Credential:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/Credential
    ProgramDocusignUser:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/ProgramDocusignUser
    ListScheduledCrowdMemberResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/ListScheduledCrowdMemberResponse
    Submission:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/Submission
    Target:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/Target
    TargetGroup:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/TargetGroup
    UpdateExternalIssueRequest:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/UpdateExternalIssueRequest
    UpdateExternalIssueResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/UpdateExternalIssueResponse
    UpdateMonetaryRewardRequest:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/UpdateMonetaryRewardRequest
    UpdateMonetaryRewardResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/UpdateMonetaryRewardResponse
    UpdateSubmissionRequest:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/UpdateSubmissionRequest
    UpdateSubmissionResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/UpdateSubmissionResponse
    UpdateCustomerAssetRequest:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/UpdateCustomerAssetRequest
    ArchiveCustomerAssetRequest:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/ArchiveCustomerAssetRequest
    ArchiveCustomerAssetResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/ArchiveCustomerAssetResponse
    UpdateCustomerAssetResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/UpdateCustomerAssetResponse
    CreateCommentRequest:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/CreateCommentRequest
    CreateCommentResponse:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/CreateCommentResponse
    WebhookSubmissionCreatedRequest:
      "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/components/schemas/WebhookSubmissionCreatedRequest
  parameters:
    BugcrowdVersionParameter:
      name: Bugcrowd-Version
      description: The request header used to test new API versions before updating
        the pinned account version
      in: header
      required: false
      schema:
        type: string
      example:
        "$ref": "#/info/version"
    IDParameter:
      name: id
      description: The ID of the resource in uuid format
      in: path
      required: true
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/UUIDSchema
      examples:
        ValidExample:
          value:
            "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
        InvalidUrlId:
          value: invalid_uuid
    ProgramIDParameter:
      name: program_id
      description: The ID of the resource in uuid format
      in: path
      required: true
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/UUIDSchema
      examples:
        ValidExample:
          value:
            "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
        InvalidUrlId:
          value: invalid_uuid
    OrganizationIDParameter:
      name: organization_id
      description: The ID of the organization in uuid format
      in: path
      required: true
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/UUIDSchema
      examples:
        ValidExample:
          value:
            "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
        InvalidUrlId:
          value: invalid_uuid
    AccessInvitationFieldsParameter:
      name: fields[access_invitation]
      description: Limit fields for `access_invitation` resources. If not provided,
        all fields will be returned
      in: query
      required: false
      explode: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/AccessInvitationFields
      examples:
        ValidExample:
          value: grantee_email,accepted_at
    AccessGrantFieldsParameter:
      name: fields[access_grant]
      description: Limit fields for `access_grant` resources. If not provided, all
        fields will be returned
      in: query
      required: false
      explode: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/AccessGrantFields
      examples:
        ValidExample:
          value: role,resource
        InvalidParamValue:
          value: invalid_value
    AccessGrantIncludeParameter:
      name: include
      description: Related associations that will be returned as a flat list of objects.
      in: query
      required: false
      explode: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/AccessGrantIncludeEnum
      examples:
        ValidExample:
          value: grantee,resource
        InvalidParamValue:
          value: invalid_resource
    AccessInvitationResourceRoleFieldsParameter:
      name: fields[resource_role]
      description: Limit fields for `resource_role`. If not provided, all fields will
        be returned
      in: query
      required: false
      explode: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/AccessInvitationResourceRoleFields
      examples:
        ValidExample:
          value: role
    AccessInvitationIncludeParameter:
      name: include
      description: Related associations that will be returned as a flat list of objects.
      in: query
      required: false
      explode: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/AccessInvitationIncludeEnum
      examples:
        ValidExample:
          value: granting_identity,resource_roles
        InvalidParamValue:
          value: invalid_resource
    ActivityFieldsParameter:
      name: fields[activity]
      description: Limit fields for `activity` resources. If not provided, all fields
        will be returned
      in: query
      required: false
      explode: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/ActivityFields
      examples:
        ValidExample:
          value: key,submission
        InvalidParamValue:
          value: invalid_value
    ClaimTicketFieldsParameter:
      name: fields[claim_ticket]
      description: Limit fields for `claim_ticket` resources. If not provided, all
        fields will be returned
      in: query
      required: false
      explode: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/ClaimTicketFields
      examples:
        ValidExample:
          value: status,claimed_at
        InvalidParamValue:
          value: invalid_value
    CommentFieldsParameter:
      name: fields[comment]
      description: Limit fields for `comment` resources. If not provided, all fields
        will be returned
      in: query
      required: false
      explode: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/CommentFields
      examples:
        ValidExample:
          value: body,author
        InvalidParamValue:
          value: invalid_value
    CvssVectorFieldsParameter:
      name: fields[cvss_vector]
      description: Limit fields for `cvss_vector` resources. If not provided, all
        fields will be returned
      in: query
      required: false
      explode: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/CvssVectorFields
      examples:
        ValidExample:
          value: version,score
        InvalidParamValue:
          value: invalid_value
    ExternalIssueFieldsParameter:
      name: fields[external_issue]
      description: Limit fields for `external_issue` resources. If not provided, all
        fields will be returned
      in: query
      required: false
      explode: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/ExternalIssueFields
      examples:
        ValidExample:
          value: remote_url,remote_id,resource,integration
        InvalidParamValue:
          value: invalid_value
    ExternalIssueIncludeParameter:
      name: include
      description: Related associations that will be returned as a flat list of objects.
      in: query
      required: false
      explode: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/ExternalIssueIncludeEnum
      examples:
        ValidExample:
          value: resource
        InvalidParamValue:
          value: invalid_resource
    FileAttachmentFieldsParameter:
      name: fields[file_attachment]
      description: Limit fields for `file_attachment` resources. If not provided,
        all fields will be returned
      in: query
      required: false
      explode: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/FileAttachmentFields
      examples:
        ValidExample:
          value: file_name,download_url
        InvalidParamValue:
          value: invalid_value
    IdentityFieldsParameter:
      name: fields[identity]
      description: Limit fields for `identity` resources. If not provided, all fields
        will be returned
      in: query
      required: false
      explode: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/IdentityFields
      examples:
        ValidExample:
          value: name,email
        InvalidParamValue:
          value: invalid_value
    IntegrationIDFilterParameter:
      name: filter[integration_id]
      description: Filter by the UUID of the integration the external issue belongs
        to.
      in: query
      required: false
      explode: false
      schema:
        type: array
        maxItems: 10
        uniqueItems: true
        items:
          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/UUIDSchema
      examples:
        ValidExample:
          value:
            "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
        InvalidFilterParam:
          value: 1
    MonetaryRewardFieldsParameter:
      name: fields[monetary_reward]
      description: Limit fields for `monetary_reward` resources. If not provided,
        all fields will be returned
      in: query
      required: false
      explode: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/MonetaryRewardFields
      examples:
        ValidExample:
          value: formatted_amount,cancelled_at
        InvalidParamValue:
          value: invalid_value
    OrganizationFieldsParameter:
      name: fields[organization]
      description: Limit fields for `organization` resources. If not provided, all
        fields will be returned
      in: query
      required: false
      explode: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/OrganizationFields
      examples:
        ValidExample:
          value: name,programs
        InvalidParamValue:
          value: invalid_value
    OrganizationIDFilterParameter:
      name: filter[organization_id]
      description: Filter by the UUID of the organization they belong to.
      in: query
      required: false
      explode: false
      schema:
        type: array
        maxItems: 10
        uniqueItems: true
        items:
          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/UUIDSchema
      examples:
        ValidExample:
          value:
            "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
        InvalidFilterParam:
          value: 1
    ProgramIDFilterParameter:
      name: filter[program_id]
      description: Filter by the UUID of the organization they belong to.
      in: query
      required: true
      explode: false
      schema:
        type: array
        maxItems: 1
        uniqueItems: true
        items:
          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/UUIDSchema
      examples:
        ValidExample:
          value:
            "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
        InvalidFilterParam:
          value: 1
    PaymentFieldsParameter:
      name: fields[payment]
      description: Limit fields for `payment` resources. If not provided, all fields
        will be returned
      in: query
      required: false
      explode: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/PaymentFields
      examples:
        ValidExample:
          value: amount_cents,monetary_reward
        InvalidParamValue:
          value: invalid_value
    ProgramFieldsParameter:
      name: fields[program]
      description: Limit fields for `program` resources. If not provided, all fields
        will be returned
      in: query
      required: false
      explode: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/ProgramFields
      examples:
        ValidExample:
          value: code,organization
        InvalidParamValue:
          value: invalid_value
    ProgramBriefFieldsParameter:
      name: fields[program_brief]
      description: Limit fields for `program_brief` resources. If not provided, all
        fields will be returned
      in: query
      required: false
      explode: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/ProgramBriefFields
      examples:
        ValidExample:
          value: demo,program
        InvalidParamValue:
          value: invalid_value
    ProgramCodeFilterParameter:
      name: filter[program_code]
      description: Filter resource by related program's url code
      in: query
      required: false
      explode: false
      schema:
        type: array
        maxItems: 10
        items:
          type: string
          example: program-code
    RemoteIssueIdFilterParameter:
      name: filter[remote_issue_id]
      description: Filter by remote issue id
      in: query
      required: false
      explode: false
      schema:
        type: array
        maxItems: 10
        uniqueItems: true
        items:
          type: string
          example: 123
    ResourceIDFilterParameter:
      name: filter[resource_id]
      description: |
        Filter by the UUID of the specified resource.
        Accepted resource types: `Organization` and `Program`
      in: query
      required: false
      explode: false
      schema:
        type: array
        maxItems: 5
        uniqueItems: true
        items:
          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/UUIDSchema
      examples:
        ValidExample:
          value:
            "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/ValidUUID
        InvalidFilterParam:
          value: 1
    RewardRangeFieldsParameter:
      name: fields[reward_range]
      description: Limit fields for `reward_range` resources. If not provided, all
        fields will be returned
      in: query
      required: false
      explode: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/RewardRangeFields
      examples:
        ValidExample:
          value: p1_max_cents,p1_min_cents
        InvalidParamValue:
          value: invalid_value
    SubmissionFieldsParameter:
      name: fields[submission]
      description: Limit fields for `submission` resources. If not provided, all fields
        will be returned
      in: query
      required: false
      explode: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/SubmissionFields
      examples:
        ValidExample:
          value: state,duplicate
        InvalidParamValue:
          value: invalid_value
    CustomerAssetFieldsParameter:
      name: fields[customer_asset]
      description: Limit fields for `customer_asset` resources. If not provided, all
        fields will be returned
      in: query
      required: false
      explode: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/CustomerAssetFields
      examples:
        ValidExample:
          value: name,description,source
        InvalidParamValue:
          value: invalid_value
    SubmissionIdFilterParameter:
      name: filter[submission_id]
      description: filter by submission id
      in: query
      required: false
      explode: false
      schema:
        type: array
        maxItems: 10
        uniqueItems: true
        items:
          "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/UUIDSchema
    TargetFieldsParameter:
      name: fields[target]
      description: Limit fields for `target` resources. If not provided, all fields
        will be returned
      in: query
      required: false
      explode: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/TargetFields
      examples:
        ValidExample:
          value: name,category
        InvalidParamValue:
          value: invalid_value
    ScheduledCrowdMemberFieldsParameter:
      name: fields[scheduled_crowd_member]
      description: Limit fields for `scheduled_crowd_member` resources. If not provided,
        all fields will be returned
      in: query
      required: false
      explode: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/ScheduledCrowdMemberFields
      examples:
        ValidExample:
          value: accepted_at,user
        InvalidParamValue:
          value: invalid_value
    UserFieldsParameter:
      name: fields[user]
      description: Limit fields for `user` resources. If not provided, all fields
        will be returned
      in: query
      required: false
      explode: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/UserFields
      examples:
        ValidExample:
          value: credentials,program_docusign_users
        InvalidParamValue:
          value: invalid_value
    CredentialBucketFieldsParameter:
      name: fields[credential_bucket]
      description: Limit fields for `credential_bucket` resources. If not provided,
        all fields will be returned
      in: query
      required: false
      explode: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/CredentialBucketFields
      examples:
        ValidExample:
          value: credential_type
        InvalidParamValue:
          value: invalid_value
    CredentialFieldsParameter:
      name: fields[credential]
      description: Limit fields for `credential` resources. If not provided, all fields
        will be returned
      in: query
      required: false
      explode: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/CredentialFields
      examples:
        ValidExample:
          value: credential_bucket_id
        InvalidParamValue:
          value: invalid_value
    ProgramDocusignUserFieldsParameter:
      name: fields[program_docusign_user]
      description: Limit fields for `program_docusign_user` resources. If not provided,
        all fields will be returned
      in: query
      required: false
      explode: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/ProgramDocusignUserFields
      examples:
        ValidExample:
          value: status,approved_at,last_signed_at
        InvalidParamValue:
          value: invalid_value
    TargetGroupFieldsParameter:
      name: fields[target_group]
      description: Limit fields for `target_group` resources. If not provided, all
        fields will be returned
      in: query
      required: false
      explode: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/TargetGroupFields
      examples:
        ValidExample:
          value: name,in_scope
        InvalidParamValue:
          value: invalid_value
    PageLimitParameter:
      name: page[limit]
      description: Limit parameter for pagination (default page[limit] = 25)
      in: query
      required: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/PageParameterLimitSchema
      examples:
        ValidExample:
          value: 50
        InvalidParamValue:
          value: 500
    PageOffsetParameter:
      name: page[offset]
      description: Offset parameter for pagination (default page[offset] = 0 == first
        page)
      in: query
      required: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/general_helpers/PageParameterOffsetSchema
      examples:
        ValidExample:
          value: 0
        BeyondMaximumOffset:
          value: 10000
        InvalidParamValue:
          value: -1
        InvalidParamType:
          value: fifty
    ProgramIncludeParameter:
      name: include
      description: Related associations that will be returned as a flat list of objects.
      in: query
      required: false
      explode: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/ProgramIncludeEnum
      examples:
        ValidExample:
          value: current_brief
        InvalidParamValue:
          value: invalid_resource
    CredentialBucketIncludeParameter:
      name: include
      description: Related associations that will be returned as a flat list of objects.
      in: query
      required: false
      explode: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/CredentialBucketIncludeEnum
      examples:
        ValidExample:
          value: credentials
        InvalidParamValue:
          value: invalid_resource
    ScheduledCrowdMemberIncludeParameter:
      name: include
      description: Related associations that will be returned as a flat list of objects.
      in: query
      required: false
      explode: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/ScheduledCrowdMemberIncludeEnum
      examples:
        ValidExample:
          value: user.credentials,user.program_docusign_users
        InvalidParamValue:
          value: invalid_resource
    ProgramBriefIncludeParameter:
      name: include
      description: Related associations that will be returned as a flat list of objects.
      in: query
      required: false
      explode: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/ProgramBriefIncludeEnum
      examples:
        ValidExample:
          value: program
        InvalidParamValue:
          value: invalid_resource
    SubmissionIncludeParameter:
      name: include
      description: Related associations that will be returned as a flat list of objects.
      in: query
      required: false
      explode: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/SubmissionIncludeEnum
      examples:
        ValidExample:
          value: program
        InvalidParamValue:
          value: invalid_resource
    TargetIncludeParameter:
      name: include
      description: Related associations that will be returned as a flat list of objects.
      in: query
      required: false
      explode: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/TargetIncludeEnum
      examples:
        ValidExample:
          value: organization
        InvalidParamValue:
          value: invalid_resource
    MonetaryRewardIncludeParameter:
      name: include
      description: Related associations that will be returned as a flat list of objects.
      in: query
      required: false
      explode: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/MonetaryRewardIncludeEnum
      examples:
        ValidExample:
          value: rewarded_by
        InvalidParamValue:
          value: invalid_resource
    OrganizationIncludeParameter:
      name: include
      description: Related associations that will be returned as a flat list of objects.
      in: query
      required: false
      explode: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/OrganizationIncludeEnum
      examples:
        ValidExample:
          value: targets
        InvalidParamValue:
          value: invalid_resource
    GetOrganizationIncludeParameter:
      name: include
      description: Related associations that will be returned as a flat list of objects.
      in: query
      required: false
      explode: false
      schema:
        "$ref": https://bugcrowd.com/openapi/2024-01-11/external_elements.yml#/domain_model_helpers/OrganizationIncludeEnum
      examples:
        ValidExample:
          value: programs
        InvalidParamValue:
          value: invalid_resource
    WebhookSignatureParameter:
      name: X-Bugcrowd-Digest
      description: A header for validating the request
      in: header
      required: true
      schema:
        type: string
        format: hmac
  responses:
    WebhookReceivedResponse:
      description: |
        The consumer should return an empty 200 status response to indicate that the data was received successfully.
        The 200 resonse should be returned as soon as possible, processing the webhook delivery should happen asynchronously.
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: |
        Example authorization header:
        ```shell
        Authorization: Token TOKEN_USERNAME:TOKEN_PASSWORD
        ```
