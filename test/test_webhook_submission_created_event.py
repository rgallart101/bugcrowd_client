# coding: utf-8

"""
    Bugcrowd REST API

    This is Bugcrowd's primary REST API and follows the [JSON API specification](https://jsonapi.org/format/).  For more information on how to get started check out the [usage documentation](https://docs.bugcrowd.com/api/usage/) 

    The version of the OpenAPI document: 2024-01-11
    Contact: support@bugcrowd.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from bugcrowd_client.models.webhook_submission_created_event import WebhookSubmissionCreatedEvent

class TestWebhookSubmissionCreatedEvent(unittest.TestCase):
    """WebhookSubmissionCreatedEvent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WebhookSubmissionCreatedEvent:
        """Test WebhookSubmissionCreatedEvent
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WebhookSubmissionCreatedEvent`
        """
        model = WebhookSubmissionCreatedEvent()
        if include_optional:
            return WebhookSubmissionCreatedEvent(
                id = '',
                type = 'event',
                attributes = bugcrowd_client.models.webhook_submission_created_event_attributes.WebhookSubmissionCreatedEvent_attributes(
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    key = 'submission.created', 
                    data = bugcrowd_client.models.event_data_submission_created.EventDataSubmissionCreated(
                        source = '', 
                        current_substate = '', ), ),
                relationships = bugcrowd_client.models.webhook_submission_created_event_relationships.WebhookSubmissionCreatedEvent_relationships(
                    actor = bugcrowd_client.models.webhook_submission_created_event_relationships_actor.WebhookSubmissionCreatedEvent_relationships_actor(
                        data = bugcrowd_client.models.event_relationships_actor_data.Event_relationships_actor_data(
                            type = 'identity', 
                            id = '', ), 
                        links = bugcrowd_client.models.single_relationship_links.SingleRelationshipLinks(
                            related = bugcrowd_client.models.single_relationship_links_related.SingleRelationshipLinks_related(
                                href = '', ), ), ), 
                    resource = bugcrowd_client.models.webhook_submission_created_event_relationships_resource.WebhookSubmissionCreatedEvent_relationships_resource(
                        data = bugcrowd_client.models.webhook_submission_created_event_relationships_resource_data.WebhookSubmissionCreatedEvent_relationships_resource_data(
                            type = 'submission', 
                            id = '', ), ), ),
                links = bugcrowd_client.models.self_link.SelfLink(
                    self = '', )
            )
        else:
            return WebhookSubmissionCreatedEvent(
                id = '',
                type = 'event',
                attributes = bugcrowd_client.models.webhook_submission_created_event_attributes.WebhookSubmissionCreatedEvent_attributes(
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    key = 'submission.created', 
                    data = bugcrowd_client.models.event_data_submission_created.EventDataSubmissionCreated(
                        source = '', 
                        current_substate = '', ), ),
                relationships = bugcrowd_client.models.webhook_submission_created_event_relationships.WebhookSubmissionCreatedEvent_relationships(
                    actor = bugcrowd_client.models.webhook_submission_created_event_relationships_actor.WebhookSubmissionCreatedEvent_relationships_actor(
                        data = bugcrowd_client.models.event_relationships_actor_data.Event_relationships_actor_data(
                            type = 'identity', 
                            id = '', ), 
                        links = bugcrowd_client.models.single_relationship_links.SingleRelationshipLinks(
                            related = bugcrowd_client.models.single_relationship_links_related.SingleRelationshipLinks_related(
                                href = '', ), ), ), 
                    resource = bugcrowd_client.models.webhook_submission_created_event_relationships_resource.WebhookSubmissionCreatedEvent_relationships_resource(
                        data = bugcrowd_client.models.webhook_submission_created_event_relationships_resource_data.WebhookSubmissionCreatedEvent_relationships_resource_data(
                            type = 'submission', 
                            id = '', ), ), ),
        )
        """

    def testWebhookSubmissionCreatedEvent(self):
        """Test WebhookSubmissionCreatedEvent"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
