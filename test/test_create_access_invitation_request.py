# coding: utf-8

"""
    Bugcrowd REST API

    This is Bugcrowd's primary REST API and follows the [JSON API specification](https://jsonapi.org/format/).  For more information on how to get started check out the [usage documentation](https://docs.bugcrowd.com/api/usage/) 

    The version of the OpenAPI document: 2024-01-11
    Contact: support@bugcrowd.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from bugcrowd_client.models.create_access_invitation_request import CreateAccessInvitationRequest

class TestCreateAccessInvitationRequest(unittest.TestCase):
    """CreateAccessInvitationRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateAccessInvitationRequest:
        """Test CreateAccessInvitationRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateAccessInvitationRequest`
        """
        model = CreateAccessInvitationRequest()
        if include_optional:
            return CreateAccessInvitationRequest(
                data = bugcrowd_client.models.create_access_invitation_request_data.CreateAccessInvitationRequest_data(
                    type = 'access_invitation', 
                    attributes = bugcrowd_client.models.create_access_invitation_request_data_attributes.CreateAccessInvitationRequest_data_attributes(
                        grantee_email = '', ), 
                    relationships = bugcrowd_client.models.create_access_invitation_request_data_relationships.CreateAccessInvitationRequest_data_relationships(
                        organization = bugcrowd_client.models.create_access_invitation_request_data_relationships_organization.CreateAccessInvitationRequest_data_relationships_organization(
                            data = bugcrowd_client.models.create_access_invitation_request_data_relationships_organization_data.CreateAccessInvitationRequest_data_relationships_organization_data(
                                type = 'organization', 
                                id = '', ), ), ), ),
                included = [
                    bugcrowd_client.models.create_access_invitation_request_included_inner.CreateAccessInvitationRequest_included_inner(
                        type = 'resource_role', 
                        attributes = bugcrowd_client.models.create_access_grant_request_data_attributes.CreateAccessGrantRequest_data_attributes(
                            role = 'owner', ), 
                        relationships = bugcrowd_client.models.create_access_invitation_request_included_inner_relationships.CreateAccessInvitationRequest_included_inner_relationships(
                            resource = bugcrowd_client.models.create_access_invitation_request_included_inner_relationships_resource.CreateAccessInvitationRequest_included_inner_relationships_resource(
                                data = bugcrowd_client.models.create_access_invitation_request_included_inner_relationships_resource_data.CreateAccessInvitationRequest_included_inner_relationships_resource_data(
                                    type = 'organization', 
                                    id = '', ), ), ), )
                    ]
            )
        else:
            return CreateAccessInvitationRequest(
                data = bugcrowd_client.models.create_access_invitation_request_data.CreateAccessInvitationRequest_data(
                    type = 'access_invitation', 
                    attributes = bugcrowd_client.models.create_access_invitation_request_data_attributes.CreateAccessInvitationRequest_data_attributes(
                        grantee_email = '', ), 
                    relationships = bugcrowd_client.models.create_access_invitation_request_data_relationships.CreateAccessInvitationRequest_data_relationships(
                        organization = bugcrowd_client.models.create_access_invitation_request_data_relationships_organization.CreateAccessInvitationRequest_data_relationships_organization(
                            data = bugcrowd_client.models.create_access_invitation_request_data_relationships_organization_data.CreateAccessInvitationRequest_data_relationships_organization_data(
                                type = 'organization', 
                                id = '', ), ), ), ),
                included = [
                    bugcrowd_client.models.create_access_invitation_request_included_inner.CreateAccessInvitationRequest_included_inner(
                        type = 'resource_role', 
                        attributes = bugcrowd_client.models.create_access_grant_request_data_attributes.CreateAccessGrantRequest_data_attributes(
                            role = 'owner', ), 
                        relationships = bugcrowd_client.models.create_access_invitation_request_included_inner_relationships.CreateAccessInvitationRequest_included_inner_relationships(
                            resource = bugcrowd_client.models.create_access_invitation_request_included_inner_relationships_resource.CreateAccessInvitationRequest_included_inner_relationships_resource(
                                data = bugcrowd_client.models.create_access_invitation_request_included_inner_relationships_resource_data.CreateAccessInvitationRequest_included_inner_relationships_resource_data(
                                    type = 'organization', 
                                    id = '', ), ), ), )
                    ],
        )
        """

    def testCreateAccessInvitationRequest(self):
        """Test CreateAccessInvitationRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
